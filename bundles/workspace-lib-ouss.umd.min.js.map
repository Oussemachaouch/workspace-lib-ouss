{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://workspace-lib-ouss/screen-editor/core/ngrx/widgets-librairies/actions.ts","ng://workspace-lib-ouss/screen-editor/core/services/api/widgets-librairies-api.service.ts","ng://workspace-lib-ouss/screen-editor/core/store/validation.store.ts","ng://workspace-lib-ouss/screen-editor/core/store/preview.store.ts","ng://workspace-lib-ouss/screen-editor/core/store/swagger-services.store.ts","ng://workspace-lib-ouss/screen-editor/core/loading/services/previewer-loading.service.ts","ng://workspace-lib-ouss/screen-editor/core/services/api/preview.service.ts","ng://workspace-lib-ouss/screen-editor/core/services/api/screens-librairies-api.service.ts","ng://workspace-lib-ouss/screen-editor/core/services/api/feature.api.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/widgets-librairies/effects.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/widgets-librairies/reducer.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/screens-librairies/actions.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/screens-librairies/effects.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/screens-librairies/reducer.ts","ng://workspace-lib-ouss/screen-editor/core/services/validation/screen-validation.service.ts","ng://workspace-lib-ouss/screen-editor/core/services/unload.service.ts","ng://workspace-lib-ouss/screen-editor/core/services/layout.service.ts","ng://workspace-lib-ouss/screen-editor/core/services/uuid/uuid.service.ts","ng://workspace-lib-ouss/screen-editor/models/device.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/navigator/navigator.ts","ng://workspace-lib-ouss/screen-editor/main/screen-editor/screen-editor.component.ts","ng://workspace-lib-ouss/screen-editor/shared/directives/remove-special-characters.directive.ts","ng://workspace-lib-ouss/screen-editor/shared/directives/cahed-src.directive.ts","ng://workspace-lib-ouss/screen-editor/shared/shared.module.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/feature-explorer/feature-explorer.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/feature-explorer/feature-explorer-toolbar/feature-explorer-toolbar.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/explorer-toolbar/explorer-toolbar.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/shared/toolbar-finder/toolbar-finder.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/shared/toolbar-btn/toolbar-add-btn.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/shared/toolbar-btn/toolbar-save-btn.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/shared/explorer-shared.module.ts","ng://workspace-lib-ouss/screen-editor/core/layout/center-container/center-container.component.ts","ng://workspace-lib-ouss/screen-editor/core/layout/global-layout/global-layout.component.ts","ng://workspace-lib-ouss/screen-editor/core/layout/left-container/left-container.component.ts","ng://workspace-lib-ouss/screen-editor/core/layout/right-container/right-container.component.ts","ng://workspace-lib-ouss/screen-editor/core/layout/layout.module.ts","ng://workspace-lib-ouss/screen-editor/core/dialog/dialog-host/dialog-host.directive.ts","ng://workspace-lib-ouss/screen-editor/core/dialog/dialog.service.ts","ng://workspace-lib-ouss/screen-editor/core/dialog/dialog.component.ts","ng://workspace-lib-ouss/screen-editor/core/dialog/dialog.module.ts","ng://workspace-lib-ouss/screen-editor/core/directives/explorer-header.pipe.ts","ng://workspace-lib-ouss/screen-editor/core/directives/safe.pipe.ts","ng://workspace-lib-ouss/screen-editor/core/loading/previewer-loading/previewer-loading.component.ts","ng://workspace-lib-ouss/screen-editor/core/loading/loading.module.ts","ng://workspace-lib-ouss/screen-editor/core/services/dnd/dnd.service.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/models/actions.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/models/effects.ts","ng://workspace-lib-ouss/screen-editor/core/ngrx/models/reducer.ts","ng://workspace-lib-ouss/screen-editor/core/core.module.ts","ng://workspace-lib-ouss/screen-editor/core/dialog/dialog.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/feature-explorer/dialog/feature-creator/feature-creator.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/explorer-toolbar/explorer-toolbar.module.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/explorer.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/feature-explorer/dialog/feature-updator/feature-updator.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/feature-explorer/dialog/feature-selector/feature-selector.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/feature-explorer/dialog/screen-cloner/screen-cloner.component.ts","ng://workspace-lib-ouss/screen-editor/components/explorer/explorer.module.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/widgets-store.component.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/widget/widget.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/preview.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/create-template/create-template.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/design-space/design-space.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/import-template/import-template.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/search-template/search-template.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/simulate-template/simulate-template.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/store-management/store-management.component.ts","ng://workspace-lib-ouss/screen-editor/components/preview/preview.module.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/store-selector/store-selector.component.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/store-displayer/store-displayer.component.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/widgets-to-screen-switcher/widgets-to-screen-switcher.service.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/widgets-to-screen-switcher/widgets-to-screen-switcher.component.ts","ng://workspace-lib-ouss/screen-editor/components/widgets-store/screens-store/screens-store.component.ts","ng://workspace-lib-ouss/screen-editor/components/components.module.ts","ng://workspace-lib-ouss/screen-editor/main/main.module.ts","ng://workspace-lib-ouss/fake-backend/mocked-response/mock.ts","ng://workspace-lib-ouss/fake-backend/mocked-api-impl/security-client-api-impl.ts","ng://workspace-lib-ouss/fake-backend/mocked-api-impl/workspace.client.api.impl.ts","ng://workspace-lib-ouss/fake-backend/mocked-api-impl/ide-message.api.ts","ng://workspace-lib-ouss/fake-backend/mocked-api-impl/ide-actions.service.ts","ng://workspace-lib-ouss/screen-editor/screen-editor.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","LOAD_WIDEGTS_LIBRAIRIES","createAction","LOAD_WIDEGTS_LIBRAIRIES_SUCCESSFULLY","props","LOAD_WIDEGTS_LIBRAIRIES_FAILED","WidgetsLibrairiesAPIService","http","api","getAllWidgetsLibraries","get","Injectable","HttpClient","Inject","args","ValidationStore","shareWithBehaviour$","BehaviorSubject","undefined","select","asObservable","err","complete","PreviewStore","shareWithBehavior$","view","ngOnDestroy","Error","SwaggerServicesStore","services","featureName","path","selectCold","PreviewerLoadingService","loaderSubject","show","hide","getLoaderState","PreviewService","previewStore","slidingMessageService","previewerLodingService","IdeMessageService","ScreensLibrairiesAPIService","getAllScreensLibrairies","FeatureApi","WidgetsLibrairiesEffects","actions$","widgetsLibrariesApi","_this","loadWidgetsLibraries$","createEffect","pipe","ofType","concatMap","map","widgetsLibrairies","catchError","of","Actions","WidgetsLibrairiesState","initialState","widgetsLibrairiesReducer","createReducer","on","state","_a","data","reducer","action","getWidgetsLibrairiesState","createFeatureSelector","getWidgetsLibrairies","createSelector","getAllWidgets","reduce","result","item","categories","filter","Boolean","category","components","allComponents","uiComponent","getAvailableWidgetsForGivenScreenType","widgets","component","screenType","rules","rule","isScreenAllowed","section","widget","defaultScreen","defaultTypes","scope","split","find","layouts","name","toLowerCase","screen","includedScreens","includes","excludedScreens","LOAD_SCREENS_LIBRAIRIES","LOAD_SCREENS_LIBRAIRIES_SUCCESSFULLY","LOAD_SCREENS_LIBRAIRIES_FAILED","ScreensLibrairiesEffects","screensLibrariesApi","screensLibrairies","ScreensLibrairiesState","screensLibrairiesReducer","getScreenssLibrairiesState","getScreensLibrairies","getAllScreens","templates","allScreensTemplates","screensTemplates","template","templateName","ScreenValidationService","widgetsLibrairiesManagement","screensLibrairiesManagement","validateScreensNames","screensNames","itm","displayed","occurence","pattern","match","validateScreenName","screenName","validateSchema","components$","screenTemplates$","zip","_b","sections","screenTemplate","content","_validateScreenSectionsRecursive","screenSectionToValidate","isArray","fieldsOccurences","getFielsOccurences","_validateItemsRecursive","items","sectionPath","index","deepPath","sep","indexOf","componentMetaData","type","validatorResult","Validator","validate","properties","schema","fieldRequired","nameRequired","property","errors","ValidationError","validationInfo","message","_getErrorMessage","toString","getAllComponents","countBy","forEach","requiredPropertiesErrors","requiredMessage","title","requiredMsg","argument","invalidTypeErrors","invalidTypeMessage","invalidMsg","replace","invalidEnumValuesErrors","invalidEnumValuesMessage","invalidValueEnum","Store","UnloadModuleService","validationStore","unloadModules","LayoutService","useCasePolicyMode$","enableUcPolicyMode","disableUcPolicyMode","isUcPolicyModeActive","UuidService","getUuid","uuid","Navigator","previwerStore","view$","goToScreenExplorer","goToPageExplorer","goToFeatureExplorer","ScreenEditorComponent","unloadModuleService","layoutService","workspaceApi","swaggerServicesStore","navigator","selectedDevice","Device","landscapeMode","collapseComponents","collapseProperties","ngOnInit","displayDeviceSwitcher$","display","displayUseCasePolicy$","swaggerServices$","getServices","subscribe","onCollapseComponents","onCollapseProperties","selectDevice","device","changeLayout","unsubscribe","backToPreview","Component","selector","WorkspaceClientApi","RemoveSpecialCharacterDirective","el","onChange","nativeElement","removeSpecialCharactersAndWhiteSpace","Directive","ElementRef","HostListener","CachedSrcDirective","elRef","renderer","defineProperty","src","setAttribute","Renderer2","Input","SharedModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","AccordionModule","TooltipModule","TreeModule","ButtonModule","ConfirmDialogModule","PanelModule","PickListModule","DialogModule","DragDropModule","MultiSelectModule","FieldsetModule","DropdownModule","MessagesModule","MessageModule","InputTextModule","AutoCompleteModule","MenuModule","ChipsModule","SpinnerModule","ListboxModule","CheckboxModule","InputSwitchModule","ToggleButtonModule","ProgressSpinnerModule","TabViewModule","OverlayPanelModule","exports","TableModule","FeatureExplorerComponent","confirmationService","ConfirmationService","FeatureExplorerToolbarComponent","ideActionsSevice","EventEmitter","addFeature","saveFeatures","unsubscribe$","Subject","doFilter","query","emit","openAddFeatureDialog","doSaveFeatures","moveNodeWithKeys","event","ctrlKey","metaKey","key","preventDefault","stopPropagation","IdeActionsService","Output","ExplorerToolbarComponent","screenSaved","openFeatureSelector","ToolbarFinderComponent","filterInput$","subscription","debounceTime","distinctUntilChanged","target","ToolbarAddBtnComponent","click","ToolbarSaveBtnComponent","ExplorerSharedModule","CenterContainerComponent","GlobalLayoutComponent","leftCollapsed","rightCollapsed","ucPolicyActive","isActive","collapseLeft","collapseRight","LeftContainerComponent","RightContainerComponent","LayoutModule","DialogHostDirective","viewContainerRef","ViewContainerRef","DialogService","shareWithReplay$","openDialog","closeDialog","DialogComponent","dialogService","componentFactoryResolver","dialogService$","cmp","dialogHost","clear","componentFactory","resolveComponentFactory","componentRef","createComponent","setOptions","changeDetectorRef","detectChanges","instance","showDialog","hideDialog","ComponentFactoryResolver","ViewChild","static","providers","ExplorerHeaderPipe","transform","Pipe","pure","SafePipe","sanitizer","url","bypassSecurityTrustResourceUrl","DomSanitizer","PreviewerLoadingComponent","LoadingModule","DndService","dragDropService","dragStart$","dragStartInfo","dragNodeTree","tree","dragNode","node","dragNodeSubNodes","subNodes","dragNodeIndex","dragNodeScope","getDroppedNode","dragStop$","treeNode","isDropNotAllowed","dropNode","parents","removed","remove","children","_addRemovedNode","parent","childs","getSelectionPath","treeItems","parentIndex","join","splice","TreeDragDropService","LOAD_MODELS","LOAD_MODELS_SUCCESSFULLY","LOAD_MODELS_FAILED","ModelsEffects","modelsApi","loadModels$","getModels","entities","ModelsState","modelsReducer","getModelsState","getAllModels","entityName","model","entity","attachRelationShipsToModel","allEntities","relationships","relationship","relationType","CoreModule","StoreModule","forFeature","widgetsLibrairiesManagement.reducer","screensLibrairiesManagement.reducer","modelsManagement.reducer","EffectsModule","Dialog","options","FeatureCreatorComponent","_super","featureAdded","tslib_1.__extends","submit","form","feature","_.lowerFirst","valid","keys","features","ExplorerToolbarModule","ExplorerComponent","FeatureUpdatorComponent","modelsManagementStore","screensCount$","disableApplyButton","disableApplyButton$","FeatureSelectorComponent","ngAfterViewInit","selectFeature","selectedFeature","updator","charAt","slice","ScreenClonerComponent","screenValidation","screenToClone","cancel","inValidScreen","changeDetection","ChangeDetectionStrategy","OnPush","ExplorerModule","entryComponents","WidgetsStoreComponent","label","routerLink","icon","WidgetComponent","PreviewComponent","desktopWidth","iframeLoaded$","CreateTemplateComponent","DesignSpaceComponent","ImportTemplateComponent","SearchTemplateComponent","SimulateTemplateComponent","StoreManagementComponent","PreviewModule","StoreSelectorComponent","selectStore","StoreDisplayerComponent","treeDragDropService","uuidService","ngOnChanges","changes","store","filterComponents","flatten","startDragComponent","componentDnDNode","buildNodeTree","initDraggableComponentNode","addComponentMetaData","startDrag","hasChild","container","randomName","Date","now","xs","sm","md","lg","substr","draggableNode","leaf","droppable","expanded","styleClass","customicon","addDefaultChilds","allComponent","element","childComponentName","child","childNumber","number","breakPointsRequired","breakpointsRequired","childComponent","childNode","orderBy","WidgetsToScreenSwitcherService","switcher","stat","switchToComponents","switchToScreens","WidgetsToScreenSwitcherComponent","collapse","takeUntil","switcherState","moveToComponents","moveToScreens","ScreensStoreComponent","workspaceService","screens$","screens","startDragScreen","screenDnDNode","initDraggableScreenNode","dataTransfer","setData","JSON","stringify","appRoutes","ComponentsModule","PanelMenuModule","RouterModule","forRoot","MainModule","ROLES","SecurityClientApiImpl","getRoles","WorkspaceClientApiImpl","getCurrentProjectInfo","shareProjectWithReplay","ReplaySubject","API_BASE_PATH","tap","getModel","shareReplay","getAllFeatures","getFeature","getPage","getAllPages","IDEMessageService","pushSuccess","console","log","detail","pushError","pushInfo","pushWarning","IdeActionsServiceImpl","doSave","save$","save","routes","screen-editor","ScreenEditorModule","forChild","provide","useValue","ɵ0$3","useClass","SecurityClientApi"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport const __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nconst __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { createAction, props } from '@ngrx/store';\n\nimport { WidgetsLibraryModel } from '../../../models/widgets-library';\n\nexport const LOAD_WIDEGTS_LIBRAIRIES = createAction(\n  '[SE - Widgets Libraries] Load Widgets Libraries'\n);\nexport const LOAD_WIDEGTS_LIBRAIRIES_SUCCESSFULLY = createAction(\n  '[SE - Widgets Libraries] Load Widgets Libraries Successfully',\n  props<{ widgetsLibrairies: WidgetsLibraryModel[] }>()\n);\nexport const LOAD_WIDEGTS_LIBRAIRIES_FAILED = createAction(\n  '[SE - Widgets Libraries] Load Widgets Libraries Failed',\n  props<{ err: any }>()\n);\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { WidgetsLibraryModel } from '../../../models/widgets-library/model';\n\n@Injectable()\nexport class WidgetsLibrairiesAPIService {\n  constructor(\n    private http: HttpClient,\n    @Inject('API_PATHS') private api: string\n  ) {}\n\n  /**\n   * Get the component library\n   * return a multi casting Replay subject\n   */\n  getAllWidgetsLibraries(): Observable<Array<WidgetsLibraryModel>> {\n    return this.http.get<Array<WidgetsLibraryModel>>(\n      `${this.api['screen-editor']}/components/all`\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observer, Observable, BehaviorSubject } from 'rxjs';\n\nimport { ValidationInfo } from '../../core/services';\n\n@Injectable()\nexport class ValidationStore implements Observer<ValidationInfo[]> {\n  private shareWithBehaviour$ = new BehaviorSubject<ValidationInfo[]>(\n    undefined\n  );\n  select(): Observable<ValidationInfo[]> {\n    return this.shareWithBehaviour$.asObservable();\n  }\n\n  next(value: ValidationInfo[]) {\n    this.shareWithBehaviour$.next([...value]);\n  }\n  error(err: any) {}\n\n  complete() {\n    // Noop\n  }\n}\n","import { View } from '../services/api';\nimport { BehaviorSubject, Observer, Observable } from 'rxjs';\nimport { OnDestroy, Injectable } from '@angular/core';\n\n@Injectable()\nexport class PreviewStore implements Observer<View>, OnDestroy {\n  private shareWithBehavior$ = new BehaviorSubject<View>(undefined);\n\n  next(view: View) {\n    this.shareWithBehavior$.next(view);\n  }\n\n  select(): Observable<View> {\n    return this.shareWithBehavior$.asObservable();\n  }\n\n  error(err: any) {}\n  complete() {\n    // Noop\n  }\n  ngOnDestroy(): void {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observer, Observable } from 'rxjs';\n\nimport { Service } from '@palmyra-devkit/core-api/shared';\n\n@Injectable()\nexport class SwaggerServicesStore implements Observer<Service[]> {\n  private shareWithBehavior$ = new BehaviorSubject<Service[]>(undefined);\n  private services = new Array<Service>();\n  next(services: Service[]) {\n    this.shareWithBehavior$.next(services);\n    this.services = [...services];\n  }\n\n  select();\n  select(featureName: string): Observable<Service[]>;\n  select(featureName: string, path: string): Observable<Service>;\n  select(featureName?: string, path?: string): Observable<Service[] | Service> {\n    // if (featureName) {\n    //   if (path) {\n    //   }\n    //   this._shareWithBehavior.asObservable().pipe(map(services=> services.filter()))\n    // }\n    return this.shareWithBehavior$.asObservable();\n  }\n\n  selectCold(): Array<Service> {\n    return this.services;\n  }\n\n  error(err: any) {}\n  complete() {\n    // Noop\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n/**\n * Singleton Loader Service used to change the state of the loader Subject\n */\n@Injectable()\nexport class PreviewerLoadingService {\n  private loaderSubject = new BehaviorSubject<boolean>(false);\n\n  constructor() {}\n\n  show() {\n    this.loaderSubject.next(true);\n  }\n\n  hide() {\n    this.loaderSubject.next(false);\n  }\n\n  getLoaderState(): Observable<boolean> {\n    return this.loaderSubject.asObservable();\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Screen, Module } from '@palmyra-devkit/core-api/shared';\nimport { IdeMessageService } from '@palmyra-devkit/core-api/client/messages';\n\nimport { PreviewStore } from '../../store';\nimport { PreviewerLoadingService } from '../../loading/services/previewer-loading.service';\n\n@Injectable()\nexport class PreviewService {\n  private init$: BehaviorSubject<Module>;\n\n  constructor(\n    private http: HttpClient,\n    private previewStore: PreviewStore,\n    private slidingMessageService: IdeMessageService,\n    private previewerLodingService: PreviewerLoadingService,\n //   @Inject('API_PATHS') private api: string\n  ) {}\n\n  /**\n   * Sends the screenDataContent to the server which returns\n   * an Observable over a View Object and write the retuned data into iframeViewSubject.\n   */\n  /*renderScreen(screenData: Screen): Observable<View> {\n    return this.http.post<View>(\n      `${this.api['screen-editor']}/preview/view`,\n      screenData\n    );\n  }\n\n  init(): Observable<Module> {\n    if (this.init$) {\n      return this.init$.asObservable();\n    }\n    return this.http\n      .get<Module>(`${this.api['screen-editor']}/preview/init`, {})\n      .pipe(\n        tap(module => {\n          this.init$ = new BehaviorSubject<Module>(module);\n        })\n      );\n  }*/\n}\nexport interface View {\n  html?: string;\n  componentsLibraryModules?: any;\n  error?: string;\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ScreensLibraryModel } from '../../../models/screens-library/model';\n\n@Injectable()\nexport class ScreensLibrairiesAPIService {\n  constructor(\n    private http: HttpClient,\n    @Inject('API_PATHS') private api: string\n  ) {}\n\n  /**\n   * Get the template library\n   * return a multi casting Replay subject\n   */\n  getAllScreensLibrairies(): Observable<Array<ScreensLibraryModel>> {\n    return this.http.get<Array<ScreensLibraryModel>>(\n      `${this.api['screen-editor']}/templates/all`\n    );\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Feature, Screen } from '@palmyra-devkit/core-api/shared';\n\n@Injectable()\nexport class FeatureApi {\n  constructor(\n    private http: HttpClient,\n    @Inject('API_PATHS') private api: string\n  ) {}\n\n  // saveFeatures(features: Feature[]): Observable<Feature[]> {\n  //   if (features === null || features === undefined) {\n  //     throw Error('Features are required');\n  //   }\n  //   return this.http.post<Feature[]>(\n  //     `${this.api['screen-editor']}/feature/all`,\n  //     features\n  //   );\n  // }\n  //\n  // saveFeature(feature: Feature): Observable<Feature> {\n  //   if (feature === null || feature === undefined) {\n  //     throw Error('Feature is required');\n  //   }\n  //   return this.http.post<Feature>(\n  //     `${this.api['screen-editor']}/feature`,\n  //     feature\n  //   );\n  // }\n  //\n  // deleteFeature(featureName: string): Observable<boolean> {\n  //   if (\n  //     featureName === undefined ||\n  //     featureName === null ||\n  //     featureName === ''\n  //   ) {\n  //     throw Error('FeatureName is required');\n  //   }\n  //   return this.http.delete<boolean>(\n  //     `${this.api['screen-editor']}/feature/${featureName}`\n  //   );\n  // }\n  //\n  // saveScreen(featureName: string, screen: Screen): Observable<Screen> {\n  //   if (\n  //     featureName === undefined ||\n  //     featureName === null ||\n  //     featureName === ''\n  //   ) {\n  //     throw Error('FeatureName is required');\n  //   }\n  //   if (screen === undefined || screen === null) {\n  //     throw Error('Screen is required');\n  //   }\n  //   return this.http.post<Screen>(\n  //     `${this.api['screen-editor']}/feature/${featureName}/screen`,\n  //     screen\n  //   );\n  // }\n  //\n  // deleteScreen(featureName: string, screenName: string): Observable<boolean> {\n  //   if (\n  //     featureName === undefined ||\n  //     featureName === null ||\n  //     featureName === ''\n  //   ) {\n  //     throw Error('FeatureName is required');\n  //   }\n  //   if (screenName === undefined || screenName === null || screenName === '') {\n  //     throw Error('ScreenName is required');\n  //   }\n  //   return this.http.delete<boolean>(\n  //     `${this.api['screen-editor']}/feature/${featureName}/screen/${screenName}`\n  //   );\n  // }\n}\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport {\n  LOAD_WIDEGTS_LIBRAIRIES,\n  LOAD_WIDEGTS_LIBRAIRIES_SUCCESSFULLY,\n  LOAD_WIDEGTS_LIBRAIRIES_FAILED\n} from './actions';\nimport { WidgetsLibrairiesAPIService } from '../../services/api';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WidgetsLibrairiesEffects {\n  constructor(\n    private actions$: Actions,\n    private widgetsLibrariesApi: WidgetsLibrairiesAPIService\n  ) {}\n\n  loadWidgetsLibraries$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LOAD_WIDEGTS_LIBRAIRIES),\n      concatMap(() =>\n        this.widgetsLibrariesApi.getAllWidgetsLibraries().pipe(\n          map(\n            widgetsLibrairies =>\n              LOAD_WIDEGTS_LIBRAIRIES_SUCCESSFULLY({ widgetsLibrairies }),\n            catchError(err => of(LOAD_WIDEGTS_LIBRAIRIES_FAILED({ err })))\n          )\n        )\n      )\n    )\n  );\n}\n","import {\n  createReducer,\n  on,\n  createFeatureSelector,\n  createSelector\n} from '@ngrx/store';\n\nimport {\n  LOAD_WIDEGTS_LIBRAIRIES,\n  LOAD_WIDEGTS_LIBRAIRIES_SUCCESSFULLY\n} from './actions';\nimport { WidgetsLibraryModel, UiComponent } from '../../../models';\n\nexport class WidgetsLibrairiesState {\n  data: WidgetsLibraryModel[];\n}\n\nexport const initialState = new WidgetsLibrairiesState();\n\nconst widgetsLibrairiesReducer = createReducer(\n  initialState,\n  on(LOAD_WIDEGTS_LIBRAIRIES, state => ({ ...state })),\n  on(LOAD_WIDEGTS_LIBRAIRIES_SUCCESSFULLY, (state, { widgetsLibrairies }) => ({\n    ...state,\n    data: [...widgetsLibrairies]\n  }))\n);\n\nexport function reducer(state: WidgetsLibrairiesState, action) {\n  return widgetsLibrairiesReducer(state, action);\n}\n\nexport const getWidgetsLibrairiesState = createFeatureSelector(\n  'SE - Widgets Librairies'\n);\n\nexport const getWidgetsLibrairies = createSelector(\n  getWidgetsLibrairiesState,\n  (state: WidgetsLibrairiesState) => state.data\n);\nexport const getAllWidgets = createSelector(\n  getWidgetsLibrairies,\n  widgetsLibrairies =>\n    widgetsLibrairies\n      ? widgetsLibrairies\n          .reduce((result, item) => {\n            return result.concat(item.categories);\n          }, [])\n          .filter(Boolean)\n          .map(category => category.components)\n          .reduce((allComponents, uiComponent) => {\n            return allComponents.concat(uiComponent);\n          }, [])\n      : []\n);\nexport const getAvailableWidgetsForGivenScreenType = createSelector(\n  getAllWidgets,\n  (widgets, props) =>\n    widgets.filter(component => {\n      if (props.screenType && component.rules) {\n        const screenRules = component.rules.filter(rule =>\n          isScreenAllowed(rule, props.screenType)\n        );\n        return screenRules.length > 0 ? true : false;\n      }\n      return true;\n    })\n);\n\nexport const getWidgetsToAutoGenerateSection = createSelector(\n  getAvailableWidgetsForGivenScreenType,\n  (widgets: UiComponent[], { screenType, section }) =>\n    widgets &&\n    widgets.filter(\n      widget =>\n        widget.defaultScreen &&\n        widget.defaultScreen.defaultTypes[screenType] &&\n        widget.scope &&\n        widget.scope.filter(\n          scope => scope.split('.').find(item => item === section) !== undefined\n        ).length > 0\n    )\n);\nexport const getAllLayoutsWidgets = createSelector(getAllWidgets, widgets =>\n  widgets.filter(widget => widget.layouts)\n);\nexport const getWidgetByName = createSelector(\n  getAllWidgets,\n  (widgets, { name }) =>\n    (widgets && widgets.find(widget => widget.name.toLowerCase() === name.toLowerCase())) || ''\n);\nexport const key = 'SE - Widgets Librairies';\n\n/**\n * Verify wether the component is allowed inside the screen or not\n * @param rule the rule\n * @param screen the current screen template\n */\nconst isScreenAllowed = (rule: any, screen: string): boolean => {\n  return (\n    (rule.includedScreens &&\n      rule.includedScreens.includes(screen) &&\n      !(rule.excludedScreens && rule.excludedScreens.includes(screen))) ||\n    (rule.includedScreens &&\n      rule.includedScreens.length === 0 &&\n      rule.excludedScreens &&\n      rule.excludedScreens.length === 0)\n  );\n};\n","import { createAction, props } from '@ngrx/store';\n\nimport { ScreensLibraryModel } from '../../../models/screens-library';\n\nexport const LOAD_SCREENS_LIBRAIRIES = createAction(\n  '[SE - Screens Libraries] Load Screens Libraries'\n);\nexport const LOAD_SCREENS_LIBRAIRIES_SUCCESSFULLY = createAction(\n  '[SE - Screens Libraries] Load Screens Libraries Successfully',\n  props<{ screensLibrairies: ScreensLibraryModel[] }>()\n);\nexport const LOAD_SCREENS_LIBRAIRIES_FAILED = createAction(\n  '[SE - Screens Libraries] Load Screens Libraries Failed',\n  props<{ err: any }>()\n);\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport {\n  LOAD_SCREENS_LIBRAIRIES,\n  LOAD_SCREENS_LIBRAIRIES_SUCCESSFULLY,\n  LOAD_SCREENS_LIBRAIRIES_FAILED\n} from './actions';\nimport { ScreensLibrairiesAPIService } from '../../services/api';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScreensLibrairiesEffects {\n  constructor(\n    private actions$: Actions,\n    private screensLibrariesApi: ScreensLibrairiesAPIService\n  ) {}\n\n  loadWidgetsLibraries$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LOAD_SCREENS_LIBRAIRIES),\n      concatMap(() =>\n        this.screensLibrariesApi.getAllScreensLibrairies().pipe(\n          map(\n            screensLibrairies =>\n              LOAD_SCREENS_LIBRAIRIES_SUCCESSFULLY({ screensLibrairies }),\n            catchError(err => of(LOAD_SCREENS_LIBRAIRIES_FAILED({ err })))\n          )\n        )\n      )\n    )\n  );\n}\n","import {\n  createReducer,\n  on,\n  createFeatureSelector,\n  createSelector\n} from '@ngrx/store';\n\nimport {\n  LOAD_SCREENS_LIBRAIRIES,\n  LOAD_SCREENS_LIBRAIRIES_SUCCESSFULLY\n} from './actions';\nimport { ScreensLibraryModel } from '../../../models';\n\nexport class ScreensLibrairiesState {\n  data: ScreensLibraryModel[];\n}\n\nexport const initialState = new ScreensLibrairiesState();\n\nconst screensLibrairiesReducer = createReducer(\n  initialState,\n  on(LOAD_SCREENS_LIBRAIRIES, state => ({ ...state })),\n  on(LOAD_SCREENS_LIBRAIRIES_SUCCESSFULLY, (state, { screensLibrairies }) => ({\n    ...state,\n    data: [...screensLibrairies]\n  }))\n);\n\nexport function reducer(state: ScreensLibrairiesState, action) {\n  return screensLibrairiesReducer(state, action);\n}\n\nexport const getScreenssLibrairiesState = createFeatureSelector(\n  'SE - Screens Librairies'\n);\n\nexport const getScreensLibrairies = createSelector(\n  getScreenssLibrairiesState,\n  (state: ScreensLibrairiesState) => state.data\n);\nexport const getAllScreens = createSelector(\n  getScreensLibrairies,\n  screensLibrairies =>\n    screensLibrairies &&\n    screensLibrairies\n      .reduce((result, item) => {\n        return result.concat(item.templates);\n      }, [])\n      .filter(Boolean)\n);\nexport const getScreensTemplateForGivenScreens = createSelector(\n  getAllScreens,\n  (allScreensTemplates, { screensTemplates }) =>\n    (allScreensTemplates &&\n      allScreensTemplates.filter(template =>\n        screensTemplates.includes(template.template)\n      )) ||\n    []\n);\nexport const getScreenTemplate = createSelector(\n  getAllScreens,\n  (allScreensTemplates, { templateName }) =>\n    (allScreensTemplates &&\n      allScreensTemplates.find(\n        template => template.template === templateName\n      )) ||\n    []\n);\nexport const key = 'SE - Screens Librairies';\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { countBy } from 'lodash';\nimport { Validator, ValidatorResult, ValidationError } from 'jsonschema';\nimport { Screen } from '@palmyra-devkit/core-api/shared';\n\nimport { Section } from '../../../models/screens-library';\nimport { UiComponent } from '../../../models/widgets-library';\nimport {\n  WidgetsLibrairiesState,\n  getAllWidgets\n} from '../../ngrx/widgets-librairies';\nimport {\n  ScreensLibrairiesState,\n  getAllScreens\n} from '../../ngrx/screens-librairies';\n\n@Injectable()\n// TODO: refactor to ValidationService validate page/screen\nexport class ScreenValidationService {\n  constructor(\n    private widgetsLibrairiesManagement: Store<WidgetsLibrairiesState>,\n    private screensLibrairiesManagement: Store<ScreensLibrairiesState>\n  ) {}\n\n  validateScreensNames(\n    screensNames: { displayed: string; name: string }[]\n  ): {\n    [key: string]: { error: string };\n  } {\n    if (screensNames && screensNames.length > 0) {\n      return screensNames.reduce((result, itm) => {\n        const empty = itm.displayed.length === 0;\n        if (empty) {\n          result[itm.name] = { error: 'The screen name is mandatory' };\n          return result;\n        }\n        const occurence = screensNames.filter(\n          name => name.displayed === itm.displayed\n        ).length;\n        const pattern =\n          itm.displayed.match(/[^0-9a-zA-Z_-\\s]/g);\n        if (occurence > 1) {\n          result[itm.name] = { error: 'This name already exists' };\n        }\n        if (pattern) {\n          result[itm.name] = {\n            error: 'Avoid using special characters'\n          };\n        }\n\n        return result;\n      }, {});\n    }\n  }\n  validateScreenName(screenName: string): boolean {\n    return (\n      screenName.match(/[^0-9a-zA-Z_-\\s]/g) !== null\n    );\n  }\n  // TODO: refactor to validateScreenSchema\n  validateSchema(screen: Screen): Observable<ValidationInfo[]> {\n    const components$ = this.widgetsLibrairiesManagement.select(getAllWidgets);\n\n    const screenTemplates$ = this.screensLibrairiesManagement.select(\n      getAllScreens\n    );\n\n    return zip(components$, screenTemplates$).pipe(\n      map(([components, screenTemplates]) => {\n        const sections = screenTemplates.find(\n          screenTemplate => screenTemplate.template === screen.content.template\n        ).sections;\n        return this._validateScreenSectionsRecursive(\n          sections,\n          screen.content,\n          components\n        );\n      })\n    );\n  }\n\n  private _validateScreenSectionsRecursive(\n    sections: Section[],\n    screen: Screen,\n    components: UiComponent[]\n  ): ValidationInfo[] {\n    return sections.reduce((result, section) => {\n      if (section.sections) {\n        return result.concat(\n          this._validateScreenSectionsRecursive(\n            section.sections,\n            screen[section.name],\n            components\n          )\n        );\n      }\n      const screenSectionToValidate = screen[section.name];\n      if (Array.isArray(screenSectionToValidate)) {\n        const fieldsOccurences = this.getFielsOccurences(\n          screenSectionToValidate\n        );\n        return result.concat(\n          this._validateItemsRecursive(\n            screenSectionToValidate,\n            fieldsOccurences,\n            components,\n            section.path || section.name,\n            section.name\n          )\n        );\n      }\n      return result;\n    }, new Array<ValidationInfo>());\n  }\n\n  private _validateItemsRecursive(\n    items: any[],\n    fieldsOccurences,\n    components: UiComponent[],\n    sectionPath: string,\n    section?: string\n  ): ValidationInfo[] {\n    return items.reduce((result, item, index) => {\n      let deepPath = sectionPath;\n      const sep = sectionPath.indexOf('-') > 0 ? '.' : '-';\n      const componentMetaData = components.find(\n        component => component.name === item.type\n      );\n      if (componentMetaData) {\n        const jsonSchemaValidator: Validator = new Validator();\n        const validatorResult: ValidatorResult = jsonSchemaValidator.validate(\n          item.properties || item,\n          componentMetaData.schema\n        );\n        // check fieldrequired and namerequired\n        if (\n          (componentMetaData.fieldRequired || componentMetaData.nameRequired) &&\n          (!item.name || item.name === '')\n        ) {\n          const property = componentMetaData.fieldRequired ? 'Field' : 'Name';\n          validatorResult.errors.push(\n            new ValidationError('', '', undefined, '', 'required', property)\n          );\n        }\n        // check occurrence\n        if (item.name && fieldsOccurences[item.name] !== 1) {\n          validatorResult.errors.push(\n            new ValidationError('', '', undefined, '', 'unique', '')\n          );\n        }\n        if (validatorResult.errors && validatorResult.errors.length > 0) {\n          const validationInfo: ValidationInfo = {\n            message: this._getErrorMessage(validatorResult),\n            path: `${deepPath}${sep}${index.toString()}`\n          };\n\n          result.push(validationInfo);\n        }\n        // handle containers items\n        if (item.components) {\n          if (!deepPath) {\n            deepPath = index.toString();\n          } else {\n            deepPath = `${deepPath}${sep}${index}`;\n          }\n          return result.concat(\n            this._validateItemsRecursive(\n              item.components,\n              fieldsOccurences,\n              components,\n              deepPath,\n              section\n            )\n          );\n        }\n      }\n      return result;\n    }, []);\n  }\n  private getFielsOccurences(items: any[]) {\n    const allComponents = this.getAllComponents(items);\n    return countBy(allComponents, 'name');\n  }\n\n  private getAllComponents(items: any[]) {\n    const allComponents = [];\n    items.forEach(component => {\n      if (component.components) {\n        allComponents.push(...this.getAllComponents(component.components));\n      }\n      allComponents.push(component);\n    });\n    return allComponents;\n  }\n\n  private _getErrorMessage(validatorResult: ValidatorResult): string {\n    const requiredPropertiesErrors = validatorResult.errors.filter(\n      error => error.name === 'required'\n    );\n    let requiredMessage = '';\n    if (requiredPropertiesErrors.length > 0) {\n      requiredMessage = requiredPropertiesErrors.reduce(\n        (requiredMsg, error) => {\n          return `${requiredMsg} <li> ${error.argument} </li>`;\n        },\n        ''\n      );\n      const title = '<span>The properties below are required :</span>';\n      requiredMessage = requiredMessage\n        ? title + `<ul>${requiredMessage}</ul>`\n        : '';\n    }\n\n    const invalidTypeErrors = validatorResult.errors.filter(\n      error => error.name === 'type'\n    );\n    let invalidTypeMessage = '';\n    if (invalidTypeErrors.length > 0) {\n      invalidTypeMessage = invalidTypeErrors.reduce((invalidMsg, error) => {\n        return `${invalidMsg} <li> ${error.property.replace('instance.', '')} ${\n          error.message\n        }`;\n      }, '');\n      const title = '<span>The properties below have invalid type :</span>';\n      invalidTypeMessage = invalidTypeMessage\n        ? title + `<ul>${invalidTypeMessage}</ul>`\n        : '';\n    }\n\n    const invalidEnumValuesErrors = validatorResult.errors.filter(\n      error => error.name === 'enum'\n    );\n    let invalidEnumValuesMessage = '';\n    if (invalidEnumValuesErrors.length > 0) {\n      invalidEnumValuesMessage = invalidEnumValuesErrors.reduce(\n        (invalidValueEnum, error) => {\n          return `${invalidValueEnum} <li> ${error.property.replace(\n            'instance.',\n            ''\n          )} ${error.message}`;\n        },\n        ''\n      );\n      const title =\n        '<span>The properties below have invalid value selected :</span>';\n      invalidEnumValuesMessage = invalidEnumValuesMessage\n        ? title + `<ul>${invalidEnumValuesMessage}</ul>`\n        : '';\n    }\n    const invalidItemName = validatorResult.errors.filter(\n      error => error.name === 'unique'\n    );\n    const invalidItemNameMessage =\n      invalidItemName.length > 0 ? '<span>Duplicated name</span><br/>' : '';\n    return `${invalidItemNameMessage}${requiredMessage}${invalidTypeMessage}${invalidEnumValuesMessage}`;\n  }\n}\n\nexport interface ValidationInfo {\n  message: string;\n  path?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { ValidationStore } from '../../core/store';\n\n@Injectable()\nexport class UnloadModuleService {\n  constructor(private validationStore: ValidationStore) {}\n\n  unloadModules() {\n    this.validationStore.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class LayoutService {\n  useCasePolicyMode$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  constructor() {}\n\n  enableUcPolicyMode() {\n    this.useCasePolicyMode$.next(true);\n  }\n\n  disableUcPolicyMode() {\n    this.useCasePolicyMode$.next(false);\n  }\n\n  isUcPolicyModeActive(): Observable<boolean> {\n    return this.useCasePolicyMode$.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\n\n@Injectable()\nexport class UuidService {\n  getUuid() {\n    return uuid();\n  }\n}\n","export enum Device {\n    DESKTOP = 'desktop',\n    PHONE = 'phone',\n    TABLET = 'tablet'\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { PreviewStore } from '../../../core/store';\n\n\n@Injectable()\nexport class Navigator {\n  private view$: BehaviorSubject<string> = new BehaviorSubject('feature');\n\n  constructor(\n    private previwerStore: PreviewStore,\n//    private propertiesManagement: Store<PropertiesState>\n  ) {}\n\n  view(): Observable<string> {\n    return this.view$;\n  }\n\n  goToScreenExplorer(): void {\n    this.view$.next('screen');\n  }\n\n  goToPageExplorer(): void {\n    this.view$.next('page');\n  }\n\n  goToFeatureExplorer(): void {\n    this.previwerStore.next(undefined);\n  //  this.propertiesManagement.dispatch(editScreenWidgetProperties(undefined));\n    this.view$.next('feature');\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { WorkspaceClientApi } from '@palmyra-devkit/core-api/client';\n\nimport { UnloadModuleService, LayoutService } from '../../core/services';\nimport { SwaggerServicesStore } from '../../core/store';\nimport { Device } from '../../models/device';\nimport { UiComponent } from '../../models/widgets-library/ui-component';\nimport { WidgetsLibraryModel } from '../../models/widgets-library/model';\nimport { Navigator } from '../../components/explorer/navigator/navigator';\n\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'screen-editor',\n  templateUrl: './screen-editor.component.html',\n  styleUrls: ['./screen-editor.component.scss']\n})\nexport class ScreenEditorComponent implements OnInit, OnDestroy {\n  components: UiComponent[];\n  componentLibrary: WidgetsLibraryModel;\n  selectedDevice: Device = Device.DESKTOP;\n  landscapeMode = false;\n  collapseComponents = false;\n  collapseProperties = false;\n  componentLibraries$: Observable<WidgetsLibraryModel[]>;\n  // tslint:disable-next-line: ban-types\n  displayDeviceSwitcher$: Observable<Boolean>;\n  // tslint:disable-next-line: ban-types\n  displayUseCasePolicy$: Observable<Boolean>;\n\n  propertiesTitle$: Observable<any>;\n\n  private swaggerServices$: Subscription;\n\n  constructor(\n    private unloadModuleService: UnloadModuleService,\n    private layoutService: LayoutService,\n    private workspaceApi: WorkspaceClientApi,\n    private swaggerServicesStore: SwaggerServicesStore,\n    private navigator: Navigator,\n  //  private featuresManagementStore: Store<FeaturesState>,\n   // private widgetsLibrairiesStore: Store<WidgetsLibrairiesState>,\n    // private screensLibrairiesStore: Store<ScreensLibrairiesState>,\n    // private modelsManagementStore: Store<ModelsState>,\n   // private propertiesManagementStore: Store<PropertiesState>\n  ) {}\n\n  ngOnInit() {\n  //  this.featuresManagementStore.dispatch(loadFeatures());\n    // this.widgetsLibrairiesStore.dispatch(LOAD_WIDEGTS_LIBRAIRIES());\n     // this.screensLibrairiesStore.dispatch(LOAD_SCREENS_LIBRAIRIES());\n    // this.modelsManagementStore.dispatch(LOAD_MODELS());\n\n    this.navigator.goToFeatureExplorer();\n    this.displayDeviceSwitcher$ = this.layoutService\n      .isUcPolicyModeActive()\n      .pipe(map(display => !display));\n    this.displayUseCasePolicy$ = this.layoutService.isUcPolicyModeActive();\n  /*  this.propertiesTitle$ = this.propertiesManagementStore\n      .select(getProperties)\n      .pipe(\n        map(value =>\n          value && value.data && value.data.type ? value.data.type : ''\n        ),\n        distinctUntilChanged()\n      );\n*/\n    this.swaggerServices$ = this.workspaceApi\n      .getServices()\n      .subscribe(services => {\n        this.swaggerServicesStore.next(services);\n      });\n  }\n\n  onCollapseComponents() {\n    this.collapseComponents = !this.collapseComponents;\n  }\n\n  onCollapseProperties() {\n    this.collapseProperties = !this.collapseProperties;\n  }\n\n  selectDevice(device) {\n    this.selectedDevice = device;\n  }\n\n  changeLayout(landscapeMode) {\n    this.landscapeMode = landscapeMode;\n  }\n\n  ngOnDestroy() {\n    this.unloadModuleService.unloadModules();\n    if (this.swaggerServices$) {\n      this.swaggerServices$.unsubscribe();\n    }\n  }\n\n  backToPreview() {\n    this.layoutService.disableUcPolicyMode();\n  }\n}\n","import { Directive, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[remove-special-char]'\n})\nexport class RemoveSpecialCharacterDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener('keyup')\n  onChange() {\n    this.el.nativeElement.value = this.removeSpecialCharactersAndWhiteSpace(\n      this.el.nativeElement.value\n    );\n  }\n\n  private removeSpecialCharactersAndWhiteSpace(value: string): string {\n    value = value.replace(/\\s+/g, '');\n    value = value.replace(/[^0-9a-zA-Z_-]/g, '');\n    return value;\n  }\n}\n","import { ElementRef, Renderer2, Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'iframe'\n})\nexport class CachedSrcDirective {\n  @Input()\n  public get cachedSrc(): string {\n    return this.elRef.nativeElement.src;\n  }\n  public set cachedSrc(src: string) {\n    if (this.elRef.nativeElement.src !== src) {\n      this.renderer.setAttribute(this.elRef.nativeElement, 'src', src);\n    }\n  }\n\n  constructor(private elRef: ElementRef, private renderer: Renderer2) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  AccordionModule,\n  TooltipModule,\n  TreeModule,\n  ButtonModule,\n  ConfirmDialogModule,\n  PanelModule,\n  PickListModule,\n  DialogModule,\n  DragDropModule,\n  MultiSelectModule,\n  FieldsetModule,\n  DropdownModule,\n  MessagesModule,\n  MessageModule,\n  InputTextModule,\n  AutoCompleteModule,\n  MenuModule,\n  ChipsModule,\n  SpinnerModule,\n  ListboxModule,\n  CheckboxModule,\n  InputSwitchModule,\n  ToggleButtonModule,\n  ProgressSpinnerModule,\n  TabViewModule,\n  OverlayPanelModule\n} from 'primeng/primeng';\nimport { TableModule } from 'primeng/table';\nimport { RemoveSpecialCharacterDirective } from './directives/remove-special-characters.directive';\nimport { CachedSrcDirective } from './directives/cahed-src.directive';\n\n@NgModule({\n  declarations: [RemoveSpecialCharacterDirective, CachedSrcDirective],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AccordionModule,\n    TooltipModule,\n    TreeModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    PanelModule,\n    PickListModule,\n    DialogModule,\n    DragDropModule,\n    MultiSelectModule,\n    FieldsetModule,\n    DropdownModule,\n    MessagesModule,\n    MessageModule,\n    InputTextModule,\n    AutoCompleteModule,\n    MenuModule,\n    ChipsModule,\n    SpinnerModule,\n    ListboxModule,\n    CheckboxModule,\n    InputSwitchModule,\n    ToggleButtonModule,\n    ProgressSpinnerModule,\n    TabViewModule,\n    OverlayPanelModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AccordionModule,\n    TooltipModule,\n    TreeModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    PanelModule,\n    PickListModule,\n    DialogModule,\n    DragDropModule,\n    MultiSelectModule,\n    FieldsetModule,\n    DropdownModule,\n    MessagesModule,\n    MessageModule,\n    InputTextModule,\n    AutoCompleteModule,\n    MenuModule,\n    ChipsModule,\n    SpinnerModule,\n    ListboxModule,\n    CheckboxModule,\n    InputSwitchModule,\n    ToggleButtonModule,\n    ProgressSpinnerModule,\n    RemoveSpecialCharacterDirective,\n    TabViewModule,\n    TableModule,\n    OverlayPanelModule,\n    CachedSrcDirective\n  ]\n})\nexport class SharedModule {}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport { ConfirmationService } from 'primeng/api';\n\nimport { Feature, Screen } from '@palmyra-devkit/core-api/shared';\n\nimport { UiTreeNode } from '../../../models/tree-node';\nimport { NodeType } from '../../../models/node-type';\n\n\n\n@Component({\n  selector: 'sc-feature-explorer',\n  templateUrl: './feature-explorer.component.html',\n  styleUrls: ['./feature-explorer.component.scss']\n})\nexport class FeatureExplorerComponent implements OnInit {\n  featuresTreeNodes: UiTreeNode[];\n  selectedNode: UiTreeNode;\n\n  featuresTreeNodes$: Observable<UiTreeNode[]>;\n\n  constructor(\n    private confirmationService: ConfirmationService,\n   // private featuresManagement: Store<FeaturesState>\n  ) {}\n\n /* ngOnInit() {\n    this.featuresTreeNodes$ = this.featuresManagement\n      .select(getFeaturesToDisplay)\n      .pipe(\n        filter(Boolean),\n        map((featuresState: FeatureState[]) =>\n          featuresState.map(featureState =>\n            this.getFeatureTreeNode(featureState, featureState.expaneded)\n          )\n        )\n      );\n  }*/\nngOnInit() {}\n /*expandFeatureNode(featureNode: UiTreeNode): void {\n    if (!featureNode.children) {\n      this.featuresManagement.dispatch(\n        loadFeature({ featureName: featureNode.label })\n      );\n    } else {\n      this.featuresManagement.dispatch(\n        toggleFeature({ featureName: featureNode.label })\n      );\n    }\n  }\n*/\n /* collapseFeatureNode(featureNode: UiTreeNode) {\n    this.featuresManagement.dispatch(\n      toggleFeature({ featureName: featureNode.label })\n    );\n  }*/\n\n  /**\n   * Used to edit a screen\n   * Fired when clicking the edit screen button\n   * @param UiTreeNode node - Screen to edit\n   */\n  /*editFeatureScreen(treeNode: UiTreeNode) {\n    this.featuresManagement.dispatch(\n      exploreScreen({\n        featureName: treeNode.parent.label,\n        screenName: treeNode.label\n      })\n    );\n  }*/\n\n  /**\n   * Open addScreenDialog\n   * @param featureNode - Feature node.\n   */\n /* openAddScreensDialog(featureNode: UiTreeNode) {\n    if (!featureNode.children) {\n      this.featuresManagement.dispatch(\n        loadFeature({ featureName: featureNode.label })\n      );\n    }\n    this.featuresManagement.dispatch(\n      openDialogToAddScreen({ featureName: featureNode.label })\n    );\n  }/*\n\n  /**\n   * Clone a screen\n   * @param screenNode node to be cloned\n   */\n  /*openCloneScreenDialo(screenNode: UiTreeNode): void {\n    this.featuresManagement.dispatch(\n      openDialogToCloneScreen({\n        featureName: screenNode.parent.label,\n        screenName: screenNode.label\n      })\n    );\n  }*/\n\n  /*preview(treeNode: UiTreeNode) {\n    this.featuresManagement.dispatch(\n      previewScreen({\n        featureName: treeNode.parent.label,\n        screenName: treeNode.label\n      })\n    );\n  }*/\n\n  /**\n   * Delete a screen\n   * @param node - node to delete\n   */\n /* deleteScreen(screenNode: UiTreeNode) {\n    const icon = 'fa fa-trash';\n    const header = 'Confirmation';\n    const message = `Do you want to delete \"${screenNode.label}\" screen?`;\n    this.featuresManagement.dispatch(\n      deleteScreenFromFeature({\n        featureName: screenNode.parent.label,\n        screenName: screenNode.label\n      })\n    );\n    this.confirmationService.confirm({\n      message,\n      header,\n      icon,\n      accept: () => {\n        [\n          confirmDeleteScreenFromFeature({\n            featureName: screenNode.parent.label,\n            screenName: screenNode.label\n          }),\n          applyFeatureUpdates({ featureName: screenNode.parent.label })\n        ].forEach(action => this.featuresManagement.dispatch(action));\n      },\n      reject: () => {\n        this.featuresManagement.dispatch(\n          cancelDeleteScreenFromFeature({\n            featureName: screenNode.parent.label,\n            screenName: screenNode.label\n          })\n        );\n      }\n    });\n  }*/\n\n  /**\n   * Delete a feature node.\n   * @param featureNode - Feature node.\n   */\n  /*deleteFeature(featureNode: UiTreeNode) {\n    const icon = 'fa fa-trash';\n    const header = 'Confirmation';\n    const message = `Do you want to delete \"${featureNode.label}\" feature?`;\n    this.featuresManagement.dispatch(\n      deleteFeature({\n        featureName: featureNode.label\n      })\n    );\n    this.confirmationService.confirm({\n      message,\n      header,\n      icon,\n      accept: () => {\n        this.featuresManagement.dispatch(\n          confirmDeleteFeature({\n            featureName: featureNode.label\n          })\n        );\n      },\n      reject: () => {\n        this.featuresManagement.dispatch(\n          cancelDeleteFeature({\n            featureName: featureNode.label\n          })\n        );\n      }\n    });\n  }*/\n\n /* private getFeatureTreeNode(\n    feature: FeatureState,\n    expanded?: boolean\n  ): UiTreeNode {\n    let screensUiNode: UiTreeNode[];\n    if (feature.screensState) {\n      screensUiNode = Object.keys(feature.screensState)\n        .filter(\n          key =>\n            !feature.screensState[key].toBeAdded &&\n            !feature.screensState[key].inTrash\n        )\n        .map(key => this.createScreenUiNode(key, feature.screensState[key]));\n    }\n    return {\n      label: feature.data.name,\n      expandedIcon: 'fa fa-folder-open',\n      collapsedIcon: 'fa fa-folder',\n      leaf: false,\n      children: screensUiNode,\n      type: NodeType.FEATURE,\n      count: feature.screensCount,\n      expanded,\n      updated: feature.isUpdated\n    };\n  }\n  private createScreenUiNode(label: string, screen: ScreenState) {\n    return {\n      label,\n      // expandedIcon: screen.model ? 'fas fa-link' : 'fas fa-unlink',\n      // collapsedIcon: screen.model ? 'fas fa-link' : 'fas fa-unlink',\n      type: NodeType.SCREEN,\n      updated: screen.isNew || screen.isUpdated,\n      linked: screen.modelName\n    };\n  }*/\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  OnInit,\n  HostListener,\n  OnDestroy\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter, takeUntil } from 'rxjs/operators';\n\n// Simport { FeaturesState, getFeatureInTrash, getScreensInTrash } from '../ngrx';\nimport { Store } from '@ngrx/store';\nimport { IdeActionsService } from '@palmyra-devkit/core-api/client';\n\n@Component({\n  selector: 'sc-feature-explorer-toolbar',\n  templateUrl: './feature-explorer-toolbar.component.html',\n  styleUrls: ['./feature-explorer-toolbar.component.css']\n})\nexport class FeatureExplorerToolbarComponent implements OnInit, OnDestroy {\n  @Output()\n  filter: EventEmitter<string> = new EventEmitter<string>();\n\n  @Output()\n  addFeature: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  saveFeatures: EventEmitter<any> = new EventEmitter<any>();\n\n  deletedScreens$: Observable<number>;\n  deletedFeatureCount$: Observable<number>;\n  unsubscribe$ = new Subject();\n\n  constructor(\n //   private featuresManagement: Store<FeaturesState>,\n    private ideActionsSevice: IdeActionsService\n  ) {}\n\n  ngOnInit() {/*\n    this.deletedScreens$ = this.featuresManagement\n      .select(getScreensInTrash)\n      .pipe(\n        filter(Boolean),\n        map((screens: []) => screens.length)\n      );\n\n    this.deletedFeatureCount$ = this.featuresManagement\n      .select(getFeatureInTrash)\n      .pipe(\n        filter(Boolean),\n        map(featuresInTrash => Object.keys(featuresInTrash).length)\n      );\n\n    this.ideActionsSevice\n      .save()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(_ => this.doSaveFeatures());*/\n  }\n  /**\n   * Used to filter tree nodes.\n   * @param event - dom event.\n   */\n  doFilter(query: string) {\n    this.filter.emit(query);\n  }\n\n  openAddFeatureDialog() {\n    this.addFeature.emit();\n  }\n\n  doSaveFeatures() {\n    this.saveFeatures.emit();\n  }\n\n  /**\n   * Save using keybord shortcut\n   * Ctrt + s\n   * @param event key board event\n   */\n  @HostListener('window:keydown', ['$event'])\n  moveNodeWithKeys(event: KeyboardEvent) {\n    if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.doSaveFeatures();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { Screen } from '@palmyra-devkit/core-api/shared';\nimport { Navigator } from '../navigator/navigator';\nimport { LayoutService } from '../../../core/services/layout.service';\n\n@Component({\n  selector: 'sc-explorer-toolbar',\n  templateUrl: './explorer-toolbar.component.html',\n  styleUrls: ['./explorer-toolbar.component.css']\n})\nexport class ExplorerToolbarComponent implements OnInit {\n  @Output()\n  query: EventEmitter<string> = new EventEmitter<string>();\n  @Output()\n  screenSaved: EventEmitter<Screen> = new EventEmitter<Screen>();\n\n  view$: Observable<string>;\n\n  constructor(\n    private navigator: Navigator,\n    private layoutService: LayoutService,\n   // private featuresManagement: Store<FeaturesState>\n  ) {}\n\n  ngOnInit(): void {\n    this.view$ = this.navigator.view();\n  }\n\n  openFeatureSelector() {\n   // this.featuresManagement.dispatch(openDialogToAddFeature());\n  }\n\n  doSaveFeatures() {\n   // this.featuresManagement.dispatch(saveFeaturesUpdates());\n  }\n\n  doFilter(query: string) {\n    this.query.emit(query);\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  Input\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'sc-toolbar-finder',\n  templateUrl: './toolbar-finder.component.html',\n  styleUrls: ['./toolbar-finder.component.css']\n})\nexport class ToolbarFinderComponent implements OnInit, OnDestroy {\n  private filterInput$: Subject<string> = new Subject<string>();\n  private subscription: Subscription;\n  @Output()\n  filter: EventEmitter<string> = new EventEmitter<string>();\n\n  @Input() placeHolder: string;\n\n  ngOnInit() {\n    this.subscription = this.filterInput$\n      .asObservable()\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.filter.emit(value);\n      });\n  }\n  doFilter(event: KeyboardEvent) {\n    this.filterInput$.next(event.target['value']);\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sc-toolbar-add-btn',\n  template: `\n    <p-button\n      icon=\"fa fa-fw fa-plus\"\n      pTooltip=\"{{ tooltip }}\"\n      tooltipPosition=\"bottom\"\n      (click)=\"click.emit($event)\"\n    ></p-button>\n  `,\n  styles: [\n    `\n      :host ::ng-deep .ui-button {\n        color: #d83431;\n        background: transparent;\n        border: none;\n        border-radius: 0;\n        height: 25px;\n        width: 25px;\n        margin-right: 0;\n        margin-left: 2px;\n      }\n    `,\n    `\n      :host ::ng-deep .ui-button:focus,\n      :host ::ng-deep .ui-button:enabled:hover {\n        background: transparent;\n        color: #d83431 !important;\n      }\n    `\n  ]\n})\nexport class ToolbarAddBtnComponent {\n  @Input() tooltip: string;\n  @Output() click: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sc-toolbar-save-btn',\n  template: `\n    <p-button\n      icon=\"fa fa-fw fa-check\"\n      pTooltip=\"{{ tooltip }}\"\n      tooltipPosition=\"bottom\"\n      (click)=\"click.emit()\"\n    ></p-button>\n  `,\n  styles: [\n    `\n      :host ::ng-deep .ui-button {\n        background: transparent;\n        border: none;\n        border-radius: 0;\n        height: 25px;\n        width: 25px;\n        margin-right: 0;\n        margin-left: 2px;\n        color: #4caf50;\n      }\n      :host ::ng-deep .ui-button .ui-button-text {\n        padding: 0px 19px;\n      }\n      :host ::ng-deep .ui-button-text-icon-left .ui-button-icon-left {\n        font-size: 12px;\n        top: 14px;\n        left: 2px;\n      }\n    `,\n    `\n      :host ::ng-deep .ui-button:focus,\n      :host ::ng-deep .ui-button:enabled:hover {\n        color: #4caf50;\n        background: transparent;\n      }\n    `\n  ]\n})\nexport class ToolbarSaveBtnComponent {\n  @Input() tooltip: string;\n  @Output() click: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../../shared/shared.module';\nimport { ToolbarFinderComponent } from './toolbar-finder/toolbar-finder.component';\nimport { ToolbarAddBtnComponent } from './toolbar-btn/toolbar-add-btn.component';\nimport { ToolbarSaveBtnComponent } from './toolbar-btn/toolbar-save-btn.component';\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    ToolbarFinderComponent,\n    ToolbarAddBtnComponent,\n    ToolbarSaveBtnComponent\n  ],\n  exports: [\n    ToolbarFinderComponent,\n    ToolbarAddBtnComponent,\n    ToolbarSaveBtnComponent\n  ]\n})\nexport class ExplorerSharedModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'center-container',\n  template: '<ng-content></ng-content>'\n})\nexport class CenterContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LayoutService } from '../../services/layout.service';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'global-layout',\n  templateUrl: './global-layout.component.html',\n  styleUrls: ['./global-layout.component.css']\n})\nexport class GlobalLayoutComponent implements OnInit {\n  leftCollapsed = false;\n  rightCollapsed = false;\n  ucPolicyActive = false;\n  constructor(\n    private layoutService: LayoutService\n  ) { }\n\n  ngOnInit() {\n    this.layoutService.isUcPolicyModeActive().subscribe(isActive => {\n      this.rightCollapsed = isActive;\n      this.ucPolicyActive = isActive;\n    });\n  }\n\n  /**\n   * Collapse/Expand the left container\n   *\n   */\n  collapseLeft() {\n    this.leftCollapsed = !this.leftCollapsed;\n  }\n\n  /**\n   * Collapse/Expand the right container\n   *\n   */\n  collapseRight() {\n    this.rightCollapsed = !this.rightCollapsed;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'left-container',\n  template: '<ng-content></ng-content>'\n})\nexport class LeftContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'right-container',\n  template: '<ng-content></ng-content>'\n})\nexport class RightContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { LeftContainerComponent } from './left-container/left-container.component';\nimport { RightContainerComponent } from './right-container/right-container.component';\nimport { CenterContainerComponent } from './center-container/center-container.component';\nimport { GlobalLayoutComponent } from './global-layout/global-layout.component';\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    LeftContainerComponent,\n    RightContainerComponent,\n    CenterContainerComponent,\n    GlobalLayoutComponent\n  ],\n  exports: [\n    LeftContainerComponent,\n    RightContainerComponent,\n    CenterContainerComponent,\n    GlobalLayoutComponent\n  ]\n})\nexport class LayoutModule {}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[dialog-host]'\n})\nexport class DialogHostDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { Injectable, Component, Type } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class DialogService {\n  private shareWithReplay$ = new BehaviorSubject<{\n    type: Type<Component>;\n    data: any;\n    title?: string;\n  }>(undefined);\n\n  openDialog(content: any) {\n    this.shareWithReplay$.next(content);\n  }\n\n  closeDialog() {\n    this.shareWithReplay$.next(undefined);\n  }\n\n  content(): Observable<{\n    type: Type<Component>;\n    data: any;\n    title?: string;\n  }> {\n    return this.shareWithReplay$;\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  ComponentFactoryResolver,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DialogHostDirective } from './dialog-host/dialog-host.directive';\nimport { DialogService } from './dialog.service';\nimport { Dialog } from '../../core/dialog/dialog';\n\n@Component({ selector: 'sc-dialog', templateUrl: './dialog.component.html' })\nexport class DialogComponent implements OnInit, OnDestroy {\n  @ViewChild(DialogHostDirective, { static: false })\n  dialogHost: DialogHostDirective;\n\n  showDialog: boolean;\n  title: string;\n\n  private dialogService$: Subscription;\n\n  constructor(\n    private dialogService: DialogService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    this.dialogService$ = this.dialogService.content().subscribe(cmp => {\n      if (cmp !== undefined) {\n        const viewContainerRef = this.dialogHost.viewContainerRef;\n        viewContainerRef.clear();\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n          cmp.type\n        );\n        const componentRef = viewContainerRef.createComponent(componentFactory);\n        (componentRef.instance as Dialog).setOptions(cmp.data);\n        componentRef.changeDetectorRef.detectChanges();\n        this.title = cmp.title || componentRef.instance['title'];\n        this.showDialog = true;\n      } else {\n        this.showDialog = false;\n      }\n    });\n  }\n\n  hideDialog() {\n    const viewContainerRef = this.dialogHost.viewContainerRef;\n    viewContainerRef.clear();\n  }\n\n  ngOnDestroy() {\n    if (this.dialogService$) {\n      this.dialogService$.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DialogHostDirective } from './dialog-host/dialog-host.directive';\nimport { DialogComponent } from './dialog.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { DialogService } from './dialog.service';\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [DialogHostDirective, DialogComponent],\n  providers: [DialogService],\n  exports: [DialogComponent]\n})\nexport class DialogModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'explorerHeader',\n  pure: false\n})\nexport class ExplorerHeaderPipe implements PipeTransform {\n  transform(featureName, args?: any): any {\n    if (featureName) {\n      return 'Feature: ' + featureName;\n    }\n    return 'Features';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(url): SafeUrl  {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n// import { PreviewerState, isLoading } from '../../../components/preview/ngrx';\n\n@Component({\n  selector: 'sc-previewer-loading',\n  templateUrl: './previewer-loading.component.html',\n  styleUrls: ['./previewer-loading.component.css']\n})\n/**\n * Loader Component to show a spinner when the state's show equals to true\n *\n */\nexport class PreviewerLoadingComponent implements OnInit {\n  loading$: Observable<boolean>;\n\n//  constructor(private previewerManagement: Store<PreviewerState>) {}\n  constructor() {\n  }\n  ngOnInit() {\n  //  this.loading$ = this.previewerManagement.select(isLoading);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport { PreviewerLoadingComponent } from './previewer-loading/previewer-loading.component';\nimport { PreviewerLoadingService } from './services/previewer-loading.service';\n\n@NgModule({\n  imports: [SharedModule, CommonModule],\n  exports: [PreviewerLoadingComponent],\n  declarations: [PreviewerLoadingComponent],\n  providers: [PreviewerLoadingService],\n})\nexport class LoadingModule { }\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { remove } from 'lodash';\nimport { TreeDragDropService } from 'primeng/api';\n\nimport { UiTreeNode } from '../../../models/tree-node';\n\n@Injectable()\nexport class DndService {\n  private dragStartInfo: any;\n  constructor(\n    public dragDropService: TreeDragDropService,\n//    private screenExplorerManagement: Store<ScreenExplorerState>\n  ) {\n    this.dragDropService.dragStart$.subscribe(event => {\n      this.dragStartInfo = {\n        dragNodeTree: event.tree,\n        dragNode: event.node,\n        dragNodeSubNodes: event.subNodes,\n        dragNodeIndex: event.index,\n        dragNodeScope: event.scope\n      };\n      if (event.tree) {\n       /* this.screenExplorerManagement.dispatch(\n          moveWidgetIndex({\n            index: this.getSelectionPath(\n              event.tree.tree.value[0].children,\n              event.node\n            )\n          })\n        );*/\n      }\n    });\n  }\n\n  getDroppedNode(): Observable<any> {\n    return this.dragDropService.dragStop$.pipe(\n      map(treeNode => {\n        return treeNode;\n      })\n    );\n  }\n  /**\n   * apply the tree dnd rules\n   * @param dropNode - node to trop inside.\n   * @param dragNode - node dragged from the widget store.\n   */\n  isDropNotAllowed(dropNode: UiTreeNode, dragNode: UiTreeNode): any {\n    // drop into the root node\n    if (dragNode.parents && dropNode.type === 'rootNode') {\n      const removed = remove(\n        dropNode.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      return this._addRemovedNode(removed);\n    }\n    // drop into root node childrens\n    if (\n      dropNode.parent &&\n      dropNode.parent.type === 'rootNode' &&\n      dragNode.parents\n    ) {\n      const removed = remove(\n        dropNode.parent.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      if (removed.length > 0) {\n        return this._addRemovedNode(removed);\n      }\n    }\n    // when parent node have childs\n    if (\n      dropNode.parent &&\n      dropNode.parent['childs'] &&\n      !dropNode.parent['childs'].includes(dragNode.data.type)\n    ) {\n      const removed = remove(\n        dropNode.parent.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      if (removed.length > 0) {\n        return this._addRemovedNode(removed);\n      }\n    }\n    if (\n      dragNode.parents &&\n      dropNode.data &&\n      !dragNode.parents.includes(dropNode.data.type)\n    ) {\n      const removed = remove(\n        dropNode.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      if (removed.length > 0) {\n        return this._addRemovedNode(removed);\n      }\n    }\n    // drop into node that have childs\n    if (dropNode.childs && !dropNode.childs.includes(dragNode.data.type)) {\n      const removed = remove(\n        dropNode.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      return this._addRemovedNode(removed);\n    }\n    // drag node have parents\n    if (\n      dragNode.parents &&\n      dropNode.data &&\n      dropNode.data.type &&\n      !dragNode.parents.includes(dropNode.data.type)\n    ) {\n      const removed = remove(\n        dropNode.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      if (removed.length > 0) {\n        return this._addRemovedNode(removed);\n      }\n    }\n    if (\n      dragNode.parents &&\n      dropNode.parent &&\n      dropNode.parent.data &&\n      !dragNode.parents.includes(dropNode.parent.data.type)\n    ) {\n      const removed = remove(\n        dropNode.parent.children,\n        (node: UiTreeNode) => node.data.type === dragNode.data.type\n      );\n      return this._addRemovedNode(removed);\n    }\n    return;\n  }\n\n  private getSelectionPath(\n    treeItems: any[],\n    node: any,\n    path?: string,\n    parentIndex?: string\n  ): string {\n    const index = treeItems.indexOf(node);\n    if (index < 0) {\n      let i = 0;\n      while (i < treeItems.length && path === undefined) {\n        const children = treeItems[i].children;\n        if (children && children.length > 0) {\n          if (parentIndex) {\n            path = this.getSelectionPath(\n              children,\n              node,\n              path,\n              [parentIndex, i].join('.')\n            );\n          } else {\n            path = this.getSelectionPath(children, node, path, i.toString());\n          }\n        }\n        i += 1;\n      }\n    }\n    if (path) {\n      return path;\n    }\n    if (!parentIndex) {\n      return index.toString();\n    }\n    if (index < 0) {\n      return undefined;\n    }\n    return [parentIndex, index].join('.');\n  }\n\n  private _addRemovedNode(removed: any[]) {\n    if (removed.length > 0) {\n      return this.dragStartInfo.dragNodeSubNodes.splice(\n        this.dragStartInfo.dragNodeIndex,\n        0,\n        this.dragStartInfo.dragNode\n      );\n    }\n    return;\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Entity } from '@palmyra-devkit/core-api/shared';\n\nexport const LOAD_MODELS = createAction('[SE Models] Load Models');\nexport const LOAD_MODELS_SUCCESSFULLY = createAction(\n  '[SE Models] Load Models Successfully',\n  props<{ entities: Entity[] }>()\n);\nexport const LOAD_MODELS_FAILED = createAction(\n  '[SE Models] Load Models Failed',\n  props<{ err: any }>()\n);\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { concatMap, map, catchError } from 'rxjs/operators';\nimport { WorkspaceClientApi } from '@palmyra-devkit/core-api/client';\n\nimport {\n  LOAD_MODELS,\n  LOAD_MODELS_SUCCESSFULLY,\n  LOAD_MODELS_FAILED\n} from './actions';\nimport { of } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ModelsEffects {\n  constructor(\n    private actions$: Actions,\n    private modelsApi: WorkspaceClientApi\n  ) {}\n\n  loadModels$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LOAD_MODELS),\n      concatMap(() => {\n        return this.modelsApi.getModels().pipe(\n          map(entities => LOAD_MODELS_SUCCESSFULLY({ entities })),\n          catchError(err => of(LOAD_MODELS_FAILED({ err })))\n        );\n      })\n    )\n  );\n}\n","import {\n  createReducer,\n  on,\n  createFeatureSelector,\n  createSelector\n} from '@ngrx/store';\n\nimport { Entity } from '@palmyra-devkit/core-api/shared';\nimport { LOAD_MODELS, LOAD_MODELS_SUCCESSFULLY } from './actions';\n\nexport class ModelsState {\n  constructor(entities?: Entity[]) {\n    this.entities = entities;\n  }\n  entities: Entity[];\n}\n\nexport const initialState = new ModelsState();\n\nconst modelsReducer = createReducer(\n  initialState,\n  on(LOAD_MODELS, state => ({ ...state })),\n  on(\n    LOAD_MODELS_SUCCESSFULLY,\n    (state, { entities }) => new ModelsState(entities)\n  )\n);\n\nexport function reducer(state: ModelsState, action) {\n  return modelsReducer(state, action);\n}\n\nexport const getModelsState = createFeatureSelector('SE - Models');\nexport const getAllModels = createSelector(\n  getModelsState,\n  (state: ModelsState) => state.entities || []\n);\nexport const getModel = createSelector(\n  getAllModels,\n  (entities, { entityName }) => {\n    if (entityName) {\n      let model = entities.find(\n        entity => entity.name.toLowerCase() === entityName.toLowerCase()\n      );\n      if (model) {\n        model = attachRelationShipsToModel(model, entities);\n      }\n      return model;\n    }\n    return undefined;\n  }\n);\n\nexport const key = 'SE - Models';\n\n// private\n\n// ToDo need to handle infinite loop in case of circular dependency\nexport function attachRelationShipsToModel(\n  entity: Entity,\n  allEntities: Entity[]\n): Entity {\n  entity.relationships.forEach(relationship => {\n    if (!relationship.entity) {\n      relationship.entity = allEntities.find(\n        relationType =>\n          relationType.name.toLowerCase() === relationship.type.toLowerCase()\n      );\n      if (relationship.entity && relationship.entity.relationships) {\n        relationship.entity = attachRelationShipsToModel(\n          relationship.entity,\n          allEntities\n        );\n      }\n    }\n  });\n\n  return entity;\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { ConfirmationService } from 'primeng/api';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { LayoutModule } from './layout';\nimport { ValidationStore, PreviewStore, SwaggerServicesStore } from './store';\nimport {\n  WidgetsLibrairiesAPIService,\n  ScreensLibrairiesAPIService,\n  PreviewService\n} from './services/api';\nimport {\n  ScreenValidationService,\n  UnloadModuleService,\n  UuidService\n} from './services';\nimport { DialogModule } from './dialog/dialog.module';\nimport { ExplorerHeaderPipe } from './directives/explorer-header.pipe';\nimport { SafePipe } from './directives/safe.pipe';\nimport { LayoutService } from './services/layout.service';\nimport { LoadingModule } from './loading/loading.module';\nimport { DndService } from '../core/services/dnd/dnd.service';\n\nimport * as widgetsLibrairiesManagement from '../core/ngrx/widgets-librairies';\nimport * as screensLibrairiesManagement from '../core/ngrx/screens-librairies';\nimport * as modelsManagement from './ngrx/models';\nimport { WidgetsLibrairiesEffects } from '../core/ngrx/widgets-librairies';\n// import { ScreensLibrairiesEffects } from '../core/ngrx/screens-librairies';\nimport { ModelsEffects } from './ngrx/models';\n\n@NgModule({\n  declarations: [ExplorerHeaderPipe, SafePipe],\n  imports: [\n    SharedModule,\n    LayoutModule,\n    DialogModule,\n    LoadingModule,\n    StoreModule.forFeature(\n      widgetsLibrairiesManagement.key,\n      widgetsLibrairiesManagement.reducer\n    ),\n    StoreModule.forFeature(\n      screensLibrairiesManagement.key,\n      screensLibrairiesManagement.reducer\n    ),\n    StoreModule.forFeature(modelsManagement.key, modelsManagement.reducer),\n    EffectsModule.forFeature([\n      WidgetsLibrairiesEffects,\n      // ScreensLibrairiesEffects,\n      ModelsEffects\n    ])\n  ],\n  exports: [\n    LayoutModule,\n    DialogModule,\n    ExplorerHeaderPipe,\n    SafePipe,\n    LoadingModule\n  ],\n  providers: [\n    ConfirmationService,\n    WidgetsLibrairiesAPIService,\n    ScreensLibrairiesAPIService,\n    PreviewService,\n    ScreenValidationService,\n    ValidationStore,\n    PreviewStore,\n    UnloadModuleService,\n    LayoutService,\n    DndService,\n    SwaggerServicesStore,\n    UuidService\n  ]\n})\nexport class CoreModule {}\n","export class Dialog {\n  options: {};\n\n  setOptions(options): void {\n    this.options = options;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Dialog } from '../../../../../core';\nimport { Store } from '@ngrx/store';\nimport { NgForm } from '@angular/forms';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'sc-feature-creator',\n  templateUrl: './feature-creator.component.html',\n  styleUrls: ['./feature-creator.component.scss']\n})\nexport class FeatureCreatorComponent extends Dialog implements OnInit {\n  @Output()\n  featureAdded = new EventEmitter<string>();\n  features;\n  feature: string;\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n   /* this.featuresManagement.select(getFeatures).subscribe(features => {\n      this.features = features;\n    });*/\n  }\n\n  submit(form: NgForm) {\n    this.feature = _.lowerFirst(this.feature);\n    if (\n      form.valid &&\n      !Object.keys(this.features).find(name => name === this.feature)\n    ) {\n      this.featureAdded.emit(this.feature);\n     /* this.featuresManagement.dispatch(\n        addFeature({\n          feature: { name: this.feature, screenscount: 0 }\n        })\n      );*/\n      this.feature = undefined;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FeatureExplorerToolbarComponent } from '../feature-explorer/feature-explorer-toolbar/feature-explorer-toolbar.component';\nimport { ExplorerToolbarComponent } from './explorer-toolbar.component';\nimport { ExplorerSharedModule } from '../shared/explorer-shared.module';\nimport { FeatureCreatorComponent } from '../feature-explorer/dialog/feature-creator/feature-creator.component';\n\n@NgModule({\n  imports: [SharedModule, ExplorerSharedModule],\n  declarations: [\n    FeatureExplorerToolbarComponent,\n    ExplorerToolbarComponent,\n    FeatureCreatorComponent\n  ],\n  exports: [\n    FeatureExplorerToolbarComponent,\n    ExplorerToolbarComponent,\n    FeatureCreatorComponent\n  ]\n})\nexport class ExplorerToolbarModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Feature, Screen } from '@palmyra-devkit/core-api/shared';\n\nimport { ScreenTemplate } from '../../models';\nimport { Navigator } from './navigator/navigator';\n\n@Component({\n  selector: 'sc-explorer',\n  templateUrl: './explorer.component.html',\n  styleUrls: ['./explorer.component.scss']\n})\nexport class ExplorerComponent {\n  constructor(\n    public navigator: Navigator,\n    // private featuresManagement: Store<FeaturesState>\n  ) {}\n\n  /**\n   * Used to filter tree nodes.\n   * @param event - dom event.\n   */\n  filter(query: string) {\n    // this.featuresManagement.dispatch(filterFeature({ query }));\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators';\nimport { includes } from 'lodash';\n\nimport { DialogService, Dialog } from '../../../../../core';\nimport { ScreenTemplate } from '../../../../../models/screens-library';\nimport {\n  ScreensLibrairiesState,\n  getAllScreens\n} from '../../../../../core/ngrx/screens-librairies';\n\n\nimport { getAllModels, ModelsState } from '../../../../../core/ngrx/models';\n@Component({\n  selector: 'sc-feature-updator',\n  templateUrl: './feature-updator.component.html',\n  styleUrls: ['./feature-updator.component.scss']\n})\nexport class FeatureUpdatorComponent extends Dialog implements OnInit {\n  featureName: string;\n  featureScreensState$: Observable<any>;\n  screensInTrashCount$: Observable<number>;\n  disableApplyButton$: Observable<boolean>;\n  templates$: Observable<ScreenTemplate[]>;\n  // screens: ScreenState[];\n  models$: Observable<any[]>;\n  title = '';\n\n  screensCount$: { [key: string]: Observable<string> } = {};\n\n  @Input()\n  setOptions(options: { featureName: string }): void {\n    this.featureName = options.featureName;\n    this.title = `Screen manager (Feature: ${this.featureName})`;\n    //this.refreshFeatureScreensState(this.featureName);\n  }\n\n  constructor(\n    private dialogService: DialogService,\n    private screensLibrairiesManagement: Store<ScreensLibrairiesState>,\n    private modelsManagementStore: Store<ModelsState>,\n    // private featuresManagement: Store<FeaturesState>\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n   /* this.templates$ = this.screensLibrairiesManagement\n      .select(getAllScreens)\n      .pipe(\n        filter(Boolean),\n        tap((screensTemplates: ScreenTemplate[]) => {\n          screensTemplates.reduce((result, screenTemplate) => {\n            result[`${screenTemplate.template}`] = this.featuresManagement\n              .select(getScreensToDisplayByType, {\n                featureName: this.featureName,\n                template: screenTemplate.template\n              })\n              .pipe(\n                map(screens => `${screenTemplate.name} (${screens.length})`)\n              );\n            return result;\n          }, this.screensCount$);\n        })\n      );\n    this.models$ = this.modelsManagementStore.select(getAllModels).pipe(\n      map(models =>\n        models.map(model => {\n          return { label: model.name, value: model.name };\n        })\n      )\n    );*/\n  }\n\n /* screenNameChanges(newName: string, index: any) {\n    this.featuresManagement.dispatch(\n      renameScreen({\n        featureName: this.featureName,\n        oldName:\n          this.screens[index]['savedName'] || this.screens[index]['screenName'],\n        newName\n      })\n    );\n  }*/\n\n /* screenDefinitionChanges(\n    screenName: string,\n    savedName: string,\n    modelName: string\n  ) {\n    this.featuresManagement.dispatch(\n      changeScrrenModel({\n        featureName: this.featureName,\n        screenName,\n        savedName,\n        modelName\n      })\n    );\n  }\n*/\n  /**\n   * sections may have nested sections\n   * @param screen the screen to delete\n   */\n /* screenToDelete(screen) {\n    this.featuresManagement.dispatch(\n      deleteScreenFromFeature({\n        featureName: this.featureName,\n        screenName: screen.screenName\n      })\n    );\n  }*/\n  /**\n   * sections may have nested sections\n   * @param screen the screen to cancel\n   */\n /* cancelDeleteScreen(screen) {\n    this.featuresManagement.dispatch(\n      cancelDeleteScreenFromFeature({\n        featureName: this.featureName,\n        screenName: screen.screenName\n      })\n    );\n  }*/\n  /**\n   * sections may have nested sections\n   * @param screenNode the screen node\n   */\n /* confirmDeleteScreen(screen) {\n    this.featuresManagement.dispatch(\n      confirmDeleteScreenFromFeature({\n        featureName: this.featureName,\n        screenName: screen.screenName\n      })\n    );\n  }*/\n\n  /*addScreen(template: ScreenTemplate) {\n    if (this.featureName) {\n      this.featuresManagement.dispatch(\n        addScreenToFeature({\n          featureName: this.featureName,\n          template\n        })\n      );\n    }\n  }*/\n\n  /*apply() {\n    this.featuresManagement.dispatch(\n      applyFeatureUpdates({\n        featureName: this.featureName\n      })\n    );\n    this.dialogService.closeDialog();\n  }*/\n\n  /**\n   * Add the 'invalid-screen-name' class name to cells having invalid input text\n   * @param name the screen name\n   * @param inputRef inputReference of the input text\n   * @returns boolean\n   */\n  /*nameValidityStyle(index: number, inputRef: HTMLElement): boolean {\n    const classameExist = includes(\n      inputRef.parentElement.parentElement.className,\n      'invalid-screen-name'\n    );\n    const isValid = !this.screens[index].errors;\n    if (isValid !== undefined && !isValid) {\n      if (!classameExist) {\n        inputRef.parentElement.parentElement.className +=\n          ' invalid-screen-name';\n      }\n      return isValid;\n    } else {\n      if (classameExist) {\n        inputRef.parentElement.parentElement.className = inputRef.parentElement.parentElement.className.replace(\n          'invalid-screen-name',\n          ''\n        );\n      }\n    }\n    if (isValid !== undefined && isValid) {\n      return isValid;\n    }\n    return !isValid;\n  }*/\n\n  /*nameValidityTooltip(index: number): string {\n    return this.screens[index].errors;\n  }*/\n\n  /**\n   * enabale or disable the Apply button\n   */\n  disableApplyButton(): Observable<boolean> {\n    // require screens validated\n    return this.disableApplyButton$;\n  }\n\n  /*private refreshFeatureScreensState(featureName: string) {\n    this.featureScreensState$ = this.getFeatureState(featureName).pipe(\n      map((screensStates: ScreenState[]) =>\n        screensStates.filter(\n          (screenState: ScreenState) =>\n            !screenState.toBeInTrash && !screenState.inTrash\n        )\n      ),\n      tap(screensState => {\n        this.screens = screensState;\n      })\n    );\n    this.disableApplyButton$ = this.getFeatureState(featureName).pipe(\n      map(screensState =>\n        screensState.every(\n          (screenState: ScreenState) =>\n            !screenState.toBeAdded &&\n            !screenState.isInValid &&\n            !screenState.toBeInTrash &&\n            !screenState.inTrash &&\n            !screenState.rename &&\n            screenState.modelChanged\n        )\n      )\n    );\n    this.screensInTrashCount$ = this.getFeatureState(featureName).pipe(\n      map(\n        (screensStates: ScreenState[]) =>\n          screensStates.filter(\n            (screenState: ScreenState) =>\n              screenState.toBeInTrash || screenState.inTrash\n          ).length\n      )\n    );\n  }*/\n /* private getFeatureState(featureName: string): Observable<any[]> {\n    return this.featuresManagement\n      .select(getScreensState, {\n        featureName\n      })\n      .pipe(\n        map(screensState => {\n          if (screensState) {\n            return Object.keys(screensState).map(key => ({\n              ...screensState[key],\n              screenName: screensState[key].rename || key\n            }));\n          }\n          return [];\n        })\n      );\n  }*/\n}\n","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { withLatestFrom, map } from 'rxjs/operators';\n\nimport { Feature, Entity } from '@palmyra-devkit/core-api/shared';\n\nimport { Dialog } from '../../../../../core/dialog/dialog';\nimport { FeatureUpdatorComponent } from '../feature-updator/feature-updator.component';\nimport { ModelsState, getAllModels } from '../../../../../core/ngrx/models';\n\n@Component({\n  selector: 'sc-feature-selector',\n  templateUrl: './feature-selector.component.html',\n  styleUrls: ['./feature-selector.component.css']\n})\nexport class FeatureSelectorComponent extends Dialog\n  implements OnInit, AfterViewInit {\n  @ViewChild('featureInput', { static: false }) feature;\n  @ViewChild('featureUpdator', { static: false })\n  updator: FeatureUpdatorComponent;\n\n  models$: Observable<Entity[]>;\n  features$: Observable<Feature[]>;\n  options: {};\n\n  selectedFeature: Entity;\n\n  constructor(\n    private modelsManagementStore: Store<ModelsState>,\n    // private featuresManagement: Store<FeaturesState>\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n   /* this.features$ = this.featuresManagement.select(getFeaturesAsData);\n    this.models$ = this.modelsManagementStore.select(getAllModels).pipe(\n      withLatestFrom(this.features$, (entities, features) => ({\n        entities,\n        features\n      })),\n      map(({ entities, features }) => {\n        const featuresNames = features.map(feature =>\n          feature.name.toLocaleLowerCase()\n        );\n        return entities.filter(\n          entity => !featuresNames.includes(entity.name.toLocaleLowerCase())\n        );\n      })\n    );*/\n  }\n\n  ngAfterViewInit() {\n    this.selectFeature();\n  }\n\n  selectFeature() {\n    if (this.selectedFeature) {\n      this.updator.setOptions({\n        featureName:\n          this.selectedFeature.name.charAt(0).toLowerCase() +\n          this.selectedFeature.name.slice(1)\n      });\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  Dialog,\n  ScreenValidationService,\n  DialogService\n} from '../../../../../core';\n\n@Component({\n  selector: 'sc-feature-cloner',\n  templateUrl: './screen-cloner.component.html',\n  styleUrls: ['./screen-cloner.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScreenClonerComponent extends Dialog {\n  screenName: string;\n  private screenToClone: string;\n  private featureName: string;\n\n  @Input()\n  setOptions(options: { featureName: string; screenName: string }): void {\n    this.screenToClone = options.screenName;\n    this.featureName = options.featureName;\n    this.screenName = `${options.screenName}0001`;\n  }\n\n  constructor(\n    private screenValidation: ScreenValidationService,\n    private dialogService: DialogService,\n    // private featuresManagement: Store<FeaturesState>\n  ) {\n    super();\n  }\n  apply(){\n\n  }\n  /*apply(): void {\n    this.featuresManagement.dispatch(\n      cloneScreen({\n        featureName: this.featureName,\n        screenName: this.screenName,\n        clonedScreenName: this.screenToClone\n      })\n    );\n    this.dialogService.closeDialog();\n  }*/\n  cancel(): void {\n    this.dialogService.closeDialog();\n  }\n\n  disableApplyButton(): boolean {\n    return false;\n  }\n\n  inValidScreen(): Observable<string> {\n   /* if (this.screenName) {\n      return this.featuresManagement\n        .select(getScreensNameToDisplayByFeature, {\n          featureName: this.featureName\n        })\n        .pipe(\n          map(screensNames => {\n            const validationResult = this.screenValidation.validateScreensNames(\n              [].concat(screensNames, {\n                displayed: this.screenName,\n                name: this.screenName\n              })\n            );\n            return (\n              validationResult[this.screenName] &&\n              validationResult[this.screenName].error\n            );\n          })\n        );\n    }*/\n    return of('The screen name is mandatory');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { SharedModule } from './../../shared/shared.module';\nimport { FeatureExplorerComponent } from './feature-explorer/feature-explorer.component';\n\nimport { ExplorerToolbarModule } from './explorer-toolbar/explorer-toolbar.module';\nimport { ExplorerComponent } from './explorer.component';\nimport { Navigator } from './navigator/navigator';\nimport { CoreModule } from '../../core';\n\nimport { FeatureSelectorComponent } from './feature-explorer/dialog/feature-selector/feature-selector.component';\nimport { FeatureUpdatorComponent } from './feature-explorer/dialog/feature-updator/feature-updator.component';\nimport { ScreenClonerComponent } from './feature-explorer/dialog/screen-cloner/screen-cloner.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    // UsecasePolicyModule,\n    ExplorerToolbarModule,\n    CoreModule,\n    // StoreModule.forFeature(featuresManagement.key, featuresManagement.reducer),\n    /*StoreModule.forFeature(\n\n      screenExplorerManagement.reducerKey,\n      screenExplorerManagement.reducer\n    ),*/\n    // EffectsModule.forFeature([FeaturesEffects, ScreenExplorerEffects])\n    EffectsModule.forFeature([])\n\n  ],\n  declarations: [\n  //  ScreenExplorerComponent,\n    FeatureExplorerComponent,\n   // SectionExplorerComponent,\n    FeatureSelectorComponent,\n    FeatureUpdatorComponent,\n    ScreenClonerComponent,\n    ExplorerComponent\n  ],\n  exports: [ExplorerComponent],\n  providers: [Navigator],\n  entryComponents: [\n    FeatureSelectorComponent,\n    FeatureUpdatorComponent,\n    ScreenClonerComponent\n  ]\n})\nexport class ExplorerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { WidgetsLibraryModel } from '../../models/widgets-library';\nimport { Navigator } from '../explorer/navigator/navigator';\nimport {\n  WidgetsLibrairiesState,\n  getWidgetsLibrairies\n} from '../../core/ngrx/widgets-librairies';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n  selector: 'sc-widgets-store',\n  templateUrl: './widgets-store.component.html',\n  styleUrls: ['./widgets-store.component.css']\n})\nexport class WidgetsStoreComponent implements OnInit {\n/*  widgetsLibrairies$: Observable<WidgetsLibraryModel[]>;\n  selectedLibrary$: Observable<WidgetsLibraryModel>;\n\n  screen$: Observable<string>;\n  view$: Observable<string>;\n\n  private librairySelectionChanges$: Subject<WidgetsLibraryModel> = new Subject<\n    WidgetsLibraryModel\n  >();\n*/\n  constructor(\n    /*\n    private navigator: Navigator,\n    private widgetsLibrairiesManagement: Store<WidgetsLibrairiesState>,\n    private screenExplorerManagement: Store<ScreenExplorerState>\n    */\n  ) {}\n\n // ngOnInit() {\n    // subscribe to the view feature/screen\n  /*  this.view$ = this.navigator.view();\n    this.screen$ = this.screenExplorerManagement.select(getScreenTemplate);\n\n    this.widgetsLibrairies$ = this.widgetsLibrairiesManagement.select(\n      getWidgetsLibrairies\n    );\n    this.selectedLibrary$ = merge(\n      this.widgetsLibrairies$.pipe(\n        map(widgetsLibraries => widgetsLibraries && widgetsLibraries[0])\n      ),\n      this.librairySelectionChanges$.asObservable()\n    );*/\n  // }\n/*\n  selectStore(store: WidgetsLibraryModel) {\n    this.librairySelectionChanges$.next(store);\n  }*/\n  items: MenuItem[];\n  ngOnInit() {\n    this.items = [\n      {\n        label: 'Store Management', routerLink: ['/store'], icon: 'pi pi-fw pi-minus'\n      },\n      {\n\n        label: 'Template Management',\n        items: [\n          {label: 'Create Template', routerLink: ['/createTemplate'], icon: 'fas fa-pencil-alt'},\n          //  {label: 'Design Space', routerLink: ['/designSpace'],icon: 'fas fa-pencil-alt'},\n          {label: 'Search Template', routerLink: ['/searchTemplate'], icon: 'fas fa-search'},\n          {label: 'Import Template', routerLink: ['/importTemplate'], icon: 'fas fa-file-import'},\n          {label: 'Simulate Template', routerLink: ['/simulateTemplate'], icon: 'fab fa-wpforms'}\n        ]\n\n      }\n\n    ];\n    this.items = [\n      {\n        label: 'Store Management',\n        icon: 'pi pi-fw pi-minus',\n        routerLink: ['/store']\n      },\n      {\n        label: 'Template Management',\n        items: [\n          {label: 'Create Template', icon: 'pi pi-pencil', routerLink: ['/createTemplate']},\n          {label: 'Search Template', icon: 'pi pi-search', routerLink: ['/searchTemplate']},\n          {label: 'Import Template', icon: 'pi pi-sign-in', routerLink: ['/importTemplate']},\n          {label: 'Simulate Template', icon: 'fab fa-wpforms', routerLink: ['/simulateTemplate']}\n        ]\n      },\n     /* {\n        label: 'Help',\n        icon: 'fa-question',\n        items: [\n          {\n            label: 'Contents',\n            icon: 'fa-bars'\n          },\n          {\n            label: 'Search',\n            icon: 'fa-search',\n            items: [\n              {\n                label: 'Text',\n                items: [\n                  {\n                    label: 'Workspace'\n                  }\n                ]\n              },\n              {\n                label: 'File',\n                icon: 'fa-file',\n              }\n            ]}\n        ]\n      },\n      {\n        label: 'Actions',\n        icon: 'fa-gear',\n        items: [\n          {\n            label: 'Edit',\n            icon: 'fa-refresh',\n            items: [\n              {label: 'Save', icon: 'fa-save'},\n              {label: 'Update', icon: 'fa-save'},\n            ]\n          },\n          {\n            label: 'Other',\n            icon: 'fa-phone',\n            items: [\n              {label: 'Delete', icon: 'fa-minus'}\n            ]\n          }\n        ]\n      }*/\n    ];\n  }\n}\n","import { Input, Component } from '@angular/core';\nimport { UiComponent } from '../../../models/widgets-library/ui-component';\n\n@Component({\n  selector: 'sc-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.css']\n})\nexport class WidgetComponent {\n  @Input() component: UiComponent;\n  constructor() {}\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { takeUntil, filter, withLatestFrom } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject, zip } from 'rxjs';\nimport { kebabCase } from 'lodash';\n\nimport { Device } from '../../models/device';\n\n\n@Component({\n  selector: 'sc-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit, OnDestroy {\n  @Input()\n  device: Device = Device.DESKTOP;\n  @Input()\n  landscapeMode = false;\n  desktopWidth = '100%';\n\n  @ViewChild('iframe', { static: false })\n  iframe: ElementRef;\n\n  // previewerState$: Observable<PreviewerState>;\n  previewerUrl;\n\n  private iframeLoaded$: Subject<void> = new Subject();\n  private unsubscribe: Subject<void> = new Subject();\n  widgetsModules: any[];\n  themeUrl: string;\n\n  constructor(\n   // private propertiesManagement: Store<PropertiesState>,\n    // private previewerManagement: Store<PreviewerState>\n  ) {}\n\n  ngOnInit() {\n    // this.previewerManagement.dispatch(initPreviewer());\n    /*this.previewerState$ = this.previewerManagement\n      .select(getPreviewerState)\n      .pipe(filter(Boolean));\n\n    zip(\n      this.previewerManagement\n        .select(getWidgetsLibrariesModules)\n        .pipe(filter(Boolean)),\n      this.previewerManagement.select(getPreviewerUrl).pipe(filter(Boolean)),\n      this.previewerManagement\n        .select(getPreviewerThemeUrl)\n        .pipe(filter(Boolean)),\n      this.iframeLoaded$.asObservable()\n    )\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe(([componentsLibraryModules, previewerUrl, themeUrl]) => {\n        if (!this.iframe) {\n          return;\n        }\n        this.previewerUrl = previewerUrl;\n        this.themeUrl = themeUrl as string;\n        this.widgetsModules = componentsLibraryModules as any[];\n        this.iframe.nativeElement.contentWindow.postMessage(\n          {\n            themeUrl,\n            widgetsModules: componentsLibraryModules\n          },\n          `${window.location.href}/${previewerUrl}`\n        );\n        this.setDeskTopWitdth('100%');\n      });\n\n    this.previewerManagement\n      .select(getScreenToPreview)\n      .pipe(\n        withLatestFrom(this.previewerManagement.select(getPreviewerUrl)),\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(([screenRenderResult, previewerUrl]) => {\n        if (!this.iframe) {\n          return;\n        }\n        if (screenRenderResult) {\n          screenRenderResult.widgetsModules = this.widgetsModules;\n          screenRenderResult.themeUrl = this.themeUrl;\n          this.iframe.nativeElement.contentWindow.postMessage(\n            screenRenderResult,\n            `${window.location.href}/${previewerUrl}`\n          );\n        } else {\n          this.iframe.nativeElement.contentWindow.postMessage(\n            'NO_SCREEN',\n            `${window.location.href}/${previewerUrl}`\n          );\n        }\n        this.setDeskTopWitdth('1200px');\n      });\n\n    this.previewerManagement\n      .select(getError)\n      .pipe(\n        filter(Boolean),\n        withLatestFrom(this.previewerManagement.select(getPreviewerUrl)),\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(([error, previewerUrl]) => {\n        if (!this.iframe) {\n          return;\n        }\n        this.iframe.nativeElement.contentWindow.postMessage(\n          error,\n          `${window.location.href}/${previewerUrl}`\n        );\n        this.setDeskTopWitdth('100%');\n      });\n\n    this.subscribeToHighlightComonent();\n    // recieve messages from the previewer iframe\n    this.registerMessageEventListener();\n  }\n*/\n  /**\n   * notify the previewer to highlight the selected\n   * component\n   */\n  /*private subscribeToHighlightComonent() {\n    this.propertiesManagement.select(getProperties).subscribe(property => {\n      const componentName =\n        property && property.scopeToUpdate\n          ? kebabCase(property.data.name)\n          : undefined;\n      const parentName = property && kebabCase(property.parentName);\n      if (this.iframe && this.iframe.nativeElement) {\n        this.iframe.nativeElement.contentWindow.postMessage(\n          { HIGHTLIGHT_COMPONENT: { name: componentName, parentName } },\n          `${window.location.href}/${this.previewerUrl}`\n        );\n      }\n    });\n  }\n*/\n  /**\n   * registers a method from the given sevice as a MessageEvent listener.\n   * @param previwerService: PreviewerService\n   */\n  /*registerMessageEventListener(): void {\n    const thisComponent = this;\n    if (window.addEventListener) {\n      // For standards-compliant web browsers\n      window.addEventListener('message', e => {\n        if (e.data && e.data.from === 'previewer') {\n          if (e.data.widgetsLibrariesLoaded) {\n            thisComponent.previewerManagement.dispatch(\n              loadPreviewerLibrairiesSuccessfully()\n            );\n          }\n          if (e.data.renderingSuccess) {\n            thisComponent.previewerManagement.dispatch(\n              renderScreenClientSuccessfully()\n            );\n          } else if (!e.data.renderingSuccess) {\n            thisComponent.previewerManagement.dispatch(\n              renderScreenClientFailed()\n            );\n          }\n        }\n      });\n    }\n  }\n\n  previewerFrameLoaded($event) {\n    if (this.iframe) {\n      this.iframeLoaded$.next();\n      this.previewerManagement.dispatch(previewerLoadedSuccessfully());\n    }\n  }\n\n  rotate() {\n    this.landscapeMode = !this.landscapeMode;\n  }\n\n  getDeskTopWitdth() {\n    return this.device === Device.DESKTOP ? this.desktopWidth : '100%';\n  }\n\n  setDeskTopWitdth(width) {\n    this.desktopWidth = width;\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribe) {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n    }*/\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-create-template',\n  templateUrl: './create-template.component.html',\n  styleUrls: ['./create-template.component.scss']\n})\nexport class CreateTemplateComponent implements OnInit {\n  title=\"Create Store Component\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-design-space',\n  templateUrl: './design-space.component.html',\n  styleUrls: ['./design-space.component.scss']\n})\nexport class DesignSpaceComponent implements OnInit {\n    title=\"Design Space Component\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-import-template',\n  templateUrl: './import-template.component.html',\n  styleUrls: ['./import-template.component.scss']\n})\nexport class ImportTemplateComponent implements OnInit {\n  title=\"Import Template Component\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-search-template',\n  templateUrl: './search-template.component.html',\n  styleUrls: ['./search-template.component.scss']\n})\nexport class SearchTemplateComponent implements OnInit {\n  title=\"Search Template Component\"\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-simulate-template',\n  templateUrl: './simulate-template.component.html',\n  styleUrls: ['./simulate-template.component.scss']\n})\nexport class SimulateTemplateComponent implements OnInit {\n  title=\"Simulate Template Component\"\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-store-management',\n  templateUrl: './store-management.component.html',\n  styleUrls: ['./store-management.component.scss']\n})\nexport class StoreManagementComponent implements OnInit {\n  title=\"Store Management Component\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PreviewComponent } from './preview.component';\nimport { CoreModule } from '../../core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CreateTemplateComponent } from './create-template/create-template.component';\nimport { DesignSpaceComponent } from './design-space/design-space.component';\nimport { ImportTemplateComponent } from './import-template/import-template.component';\nimport { SearchTemplateComponent } from './search-template/search-template.component';\nimport { SimulateTemplateComponent } from './simulate-template/simulate-template.component';\nimport { StoreManagementComponent } from './store-management/store-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule\n  ],\n  declarations: [PreviewComponent, CreateTemplateComponent, DesignSpaceComponent, ImportTemplateComponent, SearchTemplateComponent, SimulateTemplateComponent, StoreManagementComponent],\n  exports: [PreviewComponent]\n})\nexport class PreviewModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WidgetsLibraryModel } from '../../../models';\n\n@Component({\n  selector: 'sc-store-selector',\n  templateUrl: './store-selector.component.html',\n  styleUrls: ['./store-selector.component.css']\n})\nexport class StoreSelectorComponent {\n  @Input() stores: WidgetsLibraryModel[];\n\n  @Output() selectStore = new EventEmitter<WidgetsLibraryModel>();\n\n  select(event: any) {\n    this.selectStore.emit(event.value);\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { TreeDragDropService } from 'primeng/api';\nimport { flatten, orderBy } from 'lodash';\n\nimport {\n  UiComponent,\n  WidgetsLibraryModel,\n  UiTreeNode,\n  Category\n} from '../../../models';\nimport { UuidService } from '../../../core';\n\n@Component({\n  selector: 'sc-store-displayer',\n  templateUrl: './store-displayer.component.html',\n  styleUrls: ['./store-displayer.component.css']\n})\nexport class StoreDisplayerComponent implements OnChanges {\n  @Input() store: WidgetsLibraryModel;\n  @Input() mask: boolean;\n  @Input() screen: string;\n\n  categories: Category[] = [];\n  components: UiComponent[] = [];\n\n  constructor(\n    private treeDragDropService: TreeDragDropService,\n    private uuidService: UuidService\n  ) {}\n  /**\n   * Init the component treeNode\n   * when start dragging\n   * @param component - Component\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.store || changes.screen) {\n      this.categories = this.filterComponents(\n        this.store && this.store.categories\n      );\n      this.components = flatten(\n        this.categories.map(category => category.components)\n      );\n    }\n  }\n\n  startDragComponent(component: UiComponent) {\n    let componentDnDNode;\n    if (!component['defaultContent']) {\n      componentDnDNode = this.initDraggableComponentNode(component);\n      componentDnDNode = this.addComponentMetaData(component, componentDnDNode);\n    } else {\n      componentDnDNode = this.buildNodeTree(\n        [component['defaultContent']],\n        this.components\n      )[0];\n    }\n    this.treeDragDropService.startDrag({\n      tree: null,\n      node: componentDnDNode,\n      subNodes: [componentDnDNode],\n      index: 1,\n      scope: component.scope\n        ? component.scope.filter(\n            scope =>\n              scope.split('.').find(item => item === this.screen) !== undefined\n          )\n        : ''\n    });\n  }\n\n  private initDraggableComponentNode(component: UiComponent): UiTreeNode {\n    const hasChild =\n      component.container && component.childs && component.childs.length > 0;\n    const data = { type: component.name, properties: {} };\n    if (component.container) {\n      const randomName = Date.now().toString();\n      data['components'] = [];\n      data['componentsBreakpoints'] = { xs: 12, sm: 12, md: 6, lg: 4 };\n      data['name'] = `${component.name}-${randomName.substr(8)}`;\n    }\n    const draggableNode = {\n      label: component.name,\n      leaf: component.container ? false : true,\n      children: component.container ? [] : undefined,\n      data,\n      rules: component['rules'],\n      droppable: component.container ? true : false,\n      type: 'sectionItem',\n      expanded: component.container ? true : false,\n      styleClass: hasChild ? 'child-item-container' : null,\n      customicon: component.icon\n    };\n\n    if (component['defaultChilds']) {\n      this.addDefaultChilds(draggableNode, component);\n    }\n    return draggableNode;\n  }\n\n  /**\n   * Build component node that have default content.\n   */\n  buildNodeTree(content, allComponent) {\n    return content.map(element => {\n      const component = allComponent.find(cmp => cmp.name === element.type);\n      let node = this.initDraggableComponentNode(component);\n      node = this.addComponentMetaData(component, node);\n      node.data = element;\n      node.children =\n        element.components && element.components.length > 0\n          ? this.buildNodeTree(element.components, allComponent)\n          : [];\n      return node;\n    });\n  }\n\n  private addDefaultChilds(draggableNode: UiTreeNode, component: UiComponent) {\n    const childComponentName = component['defaultChilds'].child;\n    const childNumber = +component['defaultChilds'].number;\n    const breakPointsRequired = component['defaultChilds'].breakpointsRequired;\n    const childComponent = this.components.find(\n      cmp => cmp.name === childComponentName\n    );\n    childComponent.breakpointsRequired = breakPointsRequired;\n    draggableNode['noComponentsBreakpoints'] =\n      component['noComponentsBreakpoints'];\n    draggableNode['defaultChilds'] = component['defaultChilds'];\n    draggableNode['childComponentsBreakpoints'] = breakPointsRequired;\n    if (childComponent) {\n      for (let index = 0; index < childNumber; index++) {\n        let childNode = this.initDraggableComponentNode(childComponent);\n        childNode = this.addComponentMetaData(childComponent, childNode);\n        draggableNode.children.push(childNode);\n      }\n    }\n  }\n\n  private addComponentMetaData(\n    component: UiComponent,\n    node: UiTreeNode\n  ): UiTreeNode {\n    return {\n      ...node,\n      childs: component.childs,\n      parents: component.parents\n    };\n  }\n\n  private filterComponents(categories: Category[]): Category[] {\n    if (!categories) {\n      return [];\n    }\n    return categories\n      .map(category => {\n        return {\n          ...category,\n          components: orderBy(\n            category.components.filter(component => {\n              if (this.screen && component.rules) {\n                const screenRules = component.rules.filter(rule =>\n                  this.isScreenAllowed(rule, this.screen)\n                );\n                return screenRules.length > 0 ? true : false;\n              }\n              return true;\n            }),\n            'displayOrder'\n          )\n        };\n      })\n      .filter(category => category.components.length > 0);\n  }\n\n  private isScreenAllowed(rule: any, screen: string): boolean {\n    return (\n      (rule.includedScreens &&\n        rule.includedScreens.includes(screen) &&\n        !(rule.excludedScreens && rule.excludedScreens.includes(screen))) ||\n      (rule.includedScreens &&\n        rule.includedScreens.length === 0 &&\n        rule.excludedScreens &&\n        rule.excludedScreens.length === 0)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class WidgetsToScreenSwitcherService {\n  private switcher: BehaviorSubject<string> = new BehaviorSubject<string>(\n    'components'\n  );\n\n  stat(): Observable<string> {\n    return this.switcher.asObservable();\n  }\n\n  switchToComponents() {\n    this.switcher.next('components');\n  }\n\n  switchToScreens() {\n    this.switcher.next('screens');\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WidgetsToScreenSwitcherService } from './widgets-to-screen-switcher.service';\nimport { WidgetsLibraryModel } from '../../../models';\n\n@Component({\n  selector: 'sc-widgets-to-screen-switcher',\n  templateUrl: './widgets-to-screen-switcher.component.html',\n  styleUrls: ['./widgets-to-screen-switcher.component.css']\n})\nexport class WidgetsToScreenSwitcherComponent implements OnInit {\n  @Input()\n  collapseProperties: boolean;\n  @Output()\n  collapse: EventEmitter<any> = new EventEmitter();\n  unsubscribe$: Subject<any> = new Subject();\n  switcherState: string;\n  constructor(private switcher: WidgetsToScreenSwitcherService) {}\n\n  ngOnInit() {\n    this.switcher\n      .stat()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(state => (this.switcherState = state));\n  }\n\n  moveToComponents() {\n    this.switcher.switchToComponents();\n  }\n\n  moveToScreens() {\n    this.switcher.switchToScreens();\n  }\n\n  collapseComponents() {\n    this.collapse.emit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { TreeDragDropService } from 'primeng/api';\n\nimport { WorkspaceClientApi } from '@palmyra-devkit/core-api/client';\nimport { Screen } from '@palmyra-devkit/core-api/shared';\n\nimport { UiTreeNode } from '../../../models';\n\n@Component({\n  selector: 'sc-screens-store',\n  templateUrl: './screens-store.component.html',\n  styleUrls: ['./screens-store.component.css']\n})\nexport class ScreensStoreComponent implements OnInit {\n  screens$: Observable<Array<any>>;\n  selectedScreen: Screen;\n\n  constructor(\n    private workspaceService: WorkspaceClientApi,\n    private treeDragDropService: TreeDragDropService\n  ) {}\n\n  ngOnInit() {\n    this.screens$ = this.workspaceService.getAllScreens().pipe(\n      filter(Boolean),\n      map((screens: Screen[]) => {\n        return screens.map(screen => {\n          return { label: screen.title || screen.name, value: screen };\n        });\n      })\n    );\n  }\n\n  /**\n   * Init the screen treeNode when start dragging\n   * @param screen - Screen\n   */\n  startDragScreen(screen: Screen, event) {\n    const screenDnDNode: UiTreeNode = this.initDraggableScreenNode(screen);\n    event.dataTransfer.setData('dragNode', JSON.stringify(screenDnDNode));\n    this.treeDragDropService.startDrag({\n      tree: null,\n      node: screenDnDNode,\n      subNodes: [screenDnDNode],\n      scope: 'menu'\n    });\n  }\n\n  /**\n   * Init the screen node.\n   * @param screen the screen\n   */\n  private initDraggableScreenNode(screen: Screen): UiTreeNode {\n    return undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ExplorerModule } from './explorer/explorer.module';\nimport { WidgetsStoreComponent,  WidgetComponent } from './widgets-store';\nimport { CoreModule } from '../core';\nimport { PreviewModule } from './preview/preview.module';\nimport { StoreSelectorComponent } from './widgets-store/store-selector/store-selector.component';\nimport { StoreDisplayerComponent } from './widgets-store/store-displayer/store-displayer.component';\nimport { WidgetsToScreenSwitcherComponent } from './widgets-store/widgets-to-screen-switcher/widgets-to-screen-switcher.component';\nimport { WidgetsToScreenSwitcherService } from './widgets-store/widgets-to-screen-switcher/widgets-to-screen-switcher.service';\nimport { ScreensStoreComponent } from './widgets-store/screens-store/screens-store.component';\nimport { ExplorerToolbarModule } from './explorer/explorer-toolbar/explorer-toolbar.module';\nimport {CreateTemplateComponent} from './preview/create-template/create-template.component';\nimport {SearchTemplateComponent} from './preview/search-template/search-template.component';\nimport {SimulateTemplateComponent} from './preview/simulate-template/simulate-template.component';\nimport {DesignSpaceComponent} from './preview/design-space/design-space.component';\nimport {ImportTemplateComponent} from './preview/import-template/import-template.component';\nimport {StoreManagementComponent} from './preview/store-management/store-management.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PreviewComponent} from './preview/preview.component';\nimport {PanelMenuModule} from 'primeng/panelmenu';\nconst appRoutes: Routes = [\n  {path: 'createTemplate' , component: CreateTemplateComponent},\n  {path: 'searchTemplate' , component: SearchTemplateComponent},\n  {path: 'simulateTemplate' , component: SimulateTemplateComponent},\n  {path: 'designSpace' , component: DesignSpaceComponent},\n  {path: 'importTemplate' , component: ImportTemplateComponent},\n  {path: 'store', component: StoreManagementComponent},\n  {path: '' , component: PreviewComponent}\n];\n@NgModule({\n  imports: [SharedModule, ExplorerModule, CoreModule,\n    PanelMenuModule,\n    RouterModule.forRoot(appRoutes)],\n  declarations: [\n    WidgetComponent,\n    WidgetsStoreComponent,\n    StoreSelectorComponent,\n    StoreDisplayerComponent,\n    WidgetsToScreenSwitcherComponent,\n    ScreensStoreComponent\n  ],\n  exports: [\n    ExplorerModule,\n    ExplorerToolbarModule,\n    WidgetsStoreComponent,\n    WidgetsToScreenSwitcherComponent,\n    PreviewModule,\n\n  ],\n  providers: [WidgetsToScreenSwitcherService]\n})\nexport class ComponentsModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ScreenEditorComponent } from './screen-editor/screen-editor.component';\nimport { ComponentsModule } from '../components/components.module';\nimport { CoreModule } from '../core';\n@NgModule({\n  imports: [SharedModule, CoreModule, ComponentsModule],\n  declarations: [ScreenEditorComponent],\n  exports: [ScreenEditorComponent]\n})\nexport class MainModule {}\n","/* tslint:disable */\nimport { Feature, Entity, Role } from '@palmyra-devkit/core-api/shared';\n\nexport const COMPONENT_LIBRARY = {\n  id: 0,\n  name: 'PrimeNG Lib',\n  version: '1.0.1',\n  categories: [\n    {\n      name: 'input',\n      components: [\n        {\n          name: 'Label',\n          category: 'Input',\n          icon: '',\n          scope: [\n            'view.components',\n            'edit.components',\n            'selector.filter.components',\n            'selector.grid.components'\n          ],\n          rules: [\n            {\n              includedScreens: ['edit'],\n              excludedUseCases: [],\n              includedTypes: ['numeric', 'boolean'],\n              excludedTypes: [],\n              includedRelation: [],\n              excludedRelation: []\n            },\n            {\n              includedScreens: ['selector'],\n              excludedUseCases: [],\n              includedTypes: ['numeric', 'boolean', 'date'],\n              excludedTypes: [],\n              includedRelation: [],\n              excludedRelation: []\n            }\n          ],\n          container: false,\n          fieldRequired: false,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              label: {\n                type: 'string',\n                description: 'The label key of the displayed label menu item'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              readOnlyCondition: {\n                type: 'string',\n                description:\n                  'If the condition is verified, it specifies that the component should be disabled'\n              },\n              visibilityCondition: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              },\n              wordSize: {\n                type: 'integer',\n                minimum: 0,\n                description: ''\n              },\n              mandatory: {\n                type: 'boolean',\n                description: 'To indicate whether the field is mandatory or no'\n              }\n            },\n            required: ['label']\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label'\n                },\n                {\n                  key: 'mandatory'\n                },\n                {\n                  key: 'readOnly'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'visibilityCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'wordSize'\n                },\n                {\n                  key: 'styleName'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'TextField',\n          category: 'Input',\n          scope: ['edit.components'],\n          icon:\n            'M16 32h416c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96H261.743v128H296c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H152c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm427.315 340.682l-80.001-79.995C353.991 283.365 336 288.362 336 304v48H112v-47.99c0-14.307-17.307-21.319-27.314-11.313L4.685 372.692c-6.245 6.245-6.247 16.379 0 22.626l80.001 79.995C94.009 484.635 112 479.638 112 464v-48h224v47.99c0 14.307 17.307 21.319 27.314 11.313l80.001-79.995c6.245-6.245 6.248-16.379 0-22.626z',\n          rules: [\n            {\n              includedScreens: ['searchInput', 'edit'],\n              includedTypes: ['numeric', 'string', 'relation']\n            },\n            {\n              includedScreens: ['searchInput'],\n              includedTypes: ['double']\n            },\n            {\n              includedScreens: ['edit', 'view'],\n              includedTypes: ['numeric', 'string', 'date']\n            },\n            {\n              excludedUseCases: ['searchInput'],\n              includedTypes: ['long']\n            }\n          ],\n          container: false,\n          fieldRequired: true,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              readOnlyCondition: {\n                type: 'string',\n                description:\n                  'If the condition is verified, it specifies that the component should be disabled'\n              },\n              role: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              },\n              maxLength: {\n                type: 'integer',\n                minimum: 0\n              },\n              prefix: {\n                type: 'string'\n              },\n              suffix: {\n                type: 'string'\n              },\n              mask: {\n                type: 'string'\n              },\n              max: {\n                type: 'integer',\n                minimum: 0\n              },\n              label: {\n                type: 'string',\n                description: 'The label key of the displayed Text menu item'\n              },\n              screen: {\n                type: 'string',\n                enum: [''],\n                description: 'To indicate whether the field is mandatory or not'\n              },\n              feature: {\n                type: 'string',\n                enum: ['Hello'],\n                description:\n                  'To specify whether to set the field label visible or not.'\n              },\n              hideOperator: {\n                type: 'boolean',\n                description: 'To indicate that the operator can be hidden'\n              },\n              keys: {\n                type: 'array',\n                description: 'key of the field',\n                items: {\n                  type: 'object',\n                  properties: {\n                    key: {\n                      type: 'string'\n                    }\n                  },\n                  required: ['key']\n                }\n              },\n              caseSensitive: {\n                type: 'string',\n                enum: ['uppercase', 'lowercase', 'default']\n              },\n              defaultOperator: {\n                type: 'string',\n                description:\n                  'To default operator when the option hideOperator is enabled '\n              }\n            },\n            required: ['label', 'keys']\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label',\n                  value: '$screensByFeature',\n                  deps: 'field'\n                },\n                {\n                  key: 'feature',\n                  value: '$Features'\n                },\n                {\n                  key: 'screen',\n                  value: '$Screens',\n                  deps: 'feature'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'role',\n                  value: '$Roles',\n                  deps: 'feature'\n                },\n                {\n                  key: 'hideOperator',\n                  rules: [\n                    {\n                      includedScreens: ['searchInput'],\n                      excludedUseCases: [],\n                      includedTypes: [],\n                      excludedTypes: [],\n                      includedRelation: [],\n                      excludedRelation: []\n                    }\n                  ]\n                },\n                {\n                  key: 'defaultOperator',\n                  rules: [\n                    {\n                      includedScreens: ['searchInput'],\n                      excludedUseCases: [],\n                      includedTypes: [],\n                      excludedTypes: [],\n                      includedRelation: [],\n                      excludedRelation: []\n                    }\n                  ]\n                },\n                {\n                  key: 'caseSensitive'\n                },\n                {\n                  key: 'maxLength'\n                },\n                {\n                  key: 'max'\n                },\n                {\n                  key: 'prefix'\n                },\n                {\n                  key: 'suffix'\n                },\n                {\n                  key: 'mask'\n                },\n                {\n                  key: 'keys',\n                  type: 'array',\n                  rules: [\n                    {\n                      includedScreens: [],\n                      excludedUseCases: [],\n                      includedTypes: ['relation'],\n                      excludedTypes: [],\n                      includedRelation: ['composition'],\n                      excludedRelation: []\n                    }\n                  ],\n                  items: [\n                    {\n                      key: 'keys[].key',\n                      notitle: true,\n                      placeholder: 'key'\n                    }\n                  ]\n                },\n                {\n                  key: 'styleName'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'Password',\n          category: 'Input',\n          scope: ['edit.components'],\n          icon:\n            'M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z',\n          rules: [\n            {\n              includedScreens: ['searchInput', 'edit'],\n              excludedUseCases: [],\n              includedTypes: [],\n              excludedTypes: [],\n              includedRelation: [],\n              excludedRelation: []\n            }\n          ],\n          container: false,\n          fieldRequired: true,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              label: {\n                type: 'string',\n                description:\n                  'The label key of the displayed ComboBox menu item '\n              },\n              readOnlyCondition: {\n                type: 'string',\n                description:\n                  'If the condition is verified, it specifies that the component should be disabled'\n              },\n              visibilityCondition: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              },\n              mandatory: {\n                type: 'boolean',\n                description:\n                  '* true - specifies that the combobox must be filled out before submitting the form. *false -  specifies that the combobox must not be filled out before submitting the form'\n              },\n              showLabel: {\n                type: 'boolean',\n                description:\n                  'To specify whether to set the field label visible or not.'\n              }\n            },\n            required: ['label']\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label'\n                },\n                {\n                  key: 'showLabel'\n                },\n                {\n                  key: 'mandatory'\n                },\n                {\n                  key: 'readOnly'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'visibilityCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'styleName'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'DateField',\n          category: 'Input',\n          scope: ['edit.components'],\n          icon:\n            'M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm116 204c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40z',\n          rules: [\n            {\n              includedScreens: [],\n              excludedUseCases: [],\n              includedTypes: ['string', 'date'],\n              excludedTypes: [],\n              includedRelation: [],\n              excludedRelation: []\n            }\n          ],\n          container: false,\n          fieldRequired: true,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              format: {\n                type: 'string',\n                description:\n                  'Applicable in case of TextFieldCalendarLayout and FromToLayout'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              readOnlyCondition: {\n                type: 'string',\n                description:\n                  'If the condition is verified, it specifies that the component should be disabled'\n              },\n              visibilityCondition: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              },\n              label: {\n                type: 'string',\n                description:\n                  'The label key of the displayed ComboBox menu item '\n              },\n              mandatory: {\n                type: 'boolean',\n                description:\n                  '* true - specifies that the combobox must be filled out before submitting the form. *false -  specifies that the combobox must not be filled out before submitting the form'\n              },\n              showLabel: {\n                type: 'boolean',\n                description:\n                  'To specify whether to set the field label visible or not.'\n              },\n              datePrecision: {\n                type: 'string'\n              }\n            },\n            required: ['label', 'format']\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label'\n                },\n                {\n                  key: 'showLabel'\n                },\n                {\n                  key: 'mandatory'\n                },\n                {\n                  key: 'readOnly'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'visibilityCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'datePrecision'\n                },\n                {\n                  key: 'style'\n                },\n                {\n                  key: 'format'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'Combobox',\n          category: 'Input',\n          scope: ['edit.components'],\n          icon:\n            'M576 80v40c0 6.6-5.4 12-12 12H160v8c0 13.3-10.7 24-24 24h-16c-13.3 0-24-10.7-24-24v-8H12c-6.6 0-12-5.4-12-12V80c0-6.6 5.4-12 12-12h84v-8c0-13.3 10.7-24 24-24h16c13.3 0 24 10.7 24 24v8h404c6.6 0 12 5.4 12 12zm-12 148h-84v-8c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v8H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h404v8c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-8h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12zm0 160H288v-8c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v8H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h212v8c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-8h276c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12z',\n          rules: [\n            {\n              includedScreens: ['searchInput', 'edit'],\n              excludedUseCases: [],\n              includedTypes: ['numeric', 'string', 'relation', 'boolean'],\n              excludedTypes: [],\n              includedRelation: ['composition one', 'aggregation one'],\n              excludedRelation: []\n            }\n          ],\n          container: false,\n          fieldRequired: true,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              displayFilter: {\n                type: 'boolean',\n                description:\n                  '*true- displays an input field to filter the items on keyup.*false - displays an input field to filter the items on keyup. (The filter mode is always Contains mode.)'\n              },\n              lazy: {\n                type: 'boolean',\n                description:\n                  'true - retrieved values only when the user click on the Combox. (onFocus Event).* false -  retrieved values when initializing the screen (ngOnInit)'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              readOnlyCondition: {\n                type: 'string',\n                description:\n                  'If the condition is verified, it specifies that the component should be disabled'\n              },\n              visibilityCondition: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              },\n              label: {\n                type: 'string',\n                description:\n                  'The label key of the displayed ComboBox menu item '\n              },\n              sortType: {\n                type: 'string',\n                enum: ['Asc', 'Desc', 'None']\n              },\n              mandatory: {\n                type: 'boolean',\n                description:\n                  '* true - specifies that the combobox must be filled out before submitting the form. *false -  specifies that the combobox must not be filled out before submitting the form '\n              },\n              showLabel: {\n                type: 'boolean',\n                description:\n                  'To specify whether to set the field label visible or not.'\n              },\n              keys: {\n                type: 'array',\n                description: 'key of the field',\n                items: {\n                  type: 'object',\n                  properties: {\n                    key: {\n                      type: 'string'\n                    }\n                  },\n                  required: ['key']\n                }\n              }\n            },\n            required: [\n              'label',\n              'readOnlyCondition',\n              'autoWidth',\n              'displayFilter'\n            ]\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label'\n                },\n                {\n                  key: 'showLabel'\n                },\n                {\n                  key: 'mandatory'\n                },\n                {\n                  key: 'readOnly'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'visibilityCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'sortType'\n                },\n                {\n                  key: 'styleName'\n                },\n                {\n                  key: 'lazy'\n                },\n                {\n                  key: 'displayFilter'\n                },\n                {\n                  key: 'keys',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'keys[].key',\n                      notitle: true,\n                      placeholder: 'key'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'Checkbox',\n          category: 'Input',\n          scope: ['edit.components'],\n\n          icon:\n            'M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z',\n          rules: [\n            {\n              includedScreens: ['edit', 'searchInput'],\n              excludedUseCases: [],\n              includedTypes: ['boolean'],\n              excludedTypes: [],\n              includedRelation: [],\n              excludedRelation: []\n            }\n          ],\n          container: false,\n          fieldRequired: true,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              label: {\n                type: 'string',\n                description:\n                  'The label key of the displayed ComboBox menu item '\n              },\n              mandatory: {\n                type: 'boolean',\n                description:\n                  '* true - specifies that the combobox must be filled out before submitting the form. *false -  specifies that the combobox must not be filled out before submitting the form '\n              },\n              showLabel: {\n                type: 'boolean',\n                description:\n                  'To specify whether to set the field label visible or not.'\n              },\n              readOnlyCondition: {\n                type: 'string',\n                description:\n                  'If the condition is verified, it specifies that the component should be disabled'\n              },\n              visibilityCondition: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              }\n            },\n            required: ['readOnly', 'mandatory']\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label'\n                },\n                {\n                  key: 'showLabel'\n                },\n                {\n                  key: 'mandatory'\n                },\n                {\n                  key: 'readOnly'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'visibilityCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'styleName'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'Radio',\n          category: 'Input',\n          scope: ['edit.components'],\n          icon:\n            'M256 152c-57.2 0-104 46.8-104 104s46.8 104 104 104 104-46.8 104-104-46.8-104-104-104zm0-104C141.601 48 48 141.601 48 256s93.601 208 208 208 208-93.601 208-208S370.399 48 256 48zm0 374.4c-91.518 0-166.4-74.883-166.4-166.4S164.482 89.6 256 89.6 422.4 164.482 422.4 256 347.518 422.4 256 422.4z',\n          rules: [\n            {\n              includedScreens: ['searchInput', 'edit'],\n              excludedUseCases: [],\n              includedTypes: ['boolean'],\n              excludedTypes: [],\n              includedRelation: [],\n              excludedRelation: []\n            }\n          ],\n          container: false,\n          fieldRequired: true,\n          schema: {\n            type: 'object',\n            properties: {\n              styleName: {\n                type: 'string',\n                description: 'can be used to customize the style'\n              },\n              readOnly: {\n                type: 'boolean',\n                description: 'Specify if the field is read only or not'\n              },\n              label: {\n                type: 'string',\n                description:\n                  'The label key of the displayed ComboBox menu item '\n              },\n              sortType: {\n                type: 'string',\n                enum: ['Asc', 'Desc', 'None']\n              },\n              showLabel: {\n                type: 'boolean',\n                description:\n                  'To specify whether to set the field label visible or not.'\n              },\n              readOnlyCondition: {\n                type: 'string'\n              },\n              visibilityCondition: {\n                type: 'string',\n                description:\n                  \"makes the component visible if the expression's evaluation is true.\"\n              },\n              mandatory: {\n                type: 'boolean'\n              }\n            },\n            required: ['readOnly']\n          },\n          layout: [\n            {\n              items: [\n                {\n                  key: 'label'\n                },\n                {\n                  key: 'showLabel'\n                },\n                {\n                  key: 'mandatory'\n                },\n                {\n                  key: 'readOnly'\n                },\n                {\n                  key: 'readOnlyCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'visibilityCondition',\n                  type: 'textarea'\n                },\n                {\n                  key: 'sortType'\n                },\n                {\n                  key: 'styleName'\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'actions',\n      components: [\n        {\n          name: 'Button',\n          scope: [\n            'edit.actions',\n            'selector.filter.actions',\n            'selector.grid.actions'\n          ],\n          icon:\n            'M 2.898438 8 C 1.316406 8 0 9.316406 0 10.902344 L 0 22.097656 C 0 23.632813 1.253906 25 2.898438 25 L 29.097656 25 C 30.632813 25 32 23.746094 32 22.097656 L 32 10.902344 C 32 9.316406 30.683594 8 29.097656 8 Z M 2.898438 10 L 29.097656 10 C 29.714844 10 30 10.285156 30 10.902344 L 30 22.097656 C 30 22.652344 29.566406 23 29.097656 23 L 2.898438 23 C 2.347656 23 2 22.566406 2 22.097656 L 2 10.902344 C 2 10.285156 2.285156 10 2.898438 10 Z M 9.5 15 C 8.671875 15 8 15.671875 8 16.5 C 8 17.328125 8.671875 18 9.5 18 C 10.328125 18 11 17.328125 11 16.5 C 11 15.671875 10.328125 15 9.5 15 Z M 15.5 15 C 14.671875 15 14 15.671875 14 16.5 C 14 17.328125 14.671875 18 15.5 18 C 16.328125 18 17 17.328125 17 16.5 C 17 15.671875 16.328125 15 15.5 15 Z M 21.5 15 C 20.671875 15 20 15.671875 20 16.5 C 20 17.328125 20.671875 18 21.5 18 C 22.328125 18 23 17.328125 23 16.5 C 23 15.671875 22.328125 15 21.5 15 Z ',\n          include: ['edit', 'view', 'search-input', 'searchResult'],\n          fieldRequired: false,\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'ButtonContainer',\n          container: true,\n          icon:\n            'M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h340c3.3 0 6 2.7 6 6v340c0 3.3-2.7 6-6 6z',\n          include: ['edit', 'view', 'search-input', 'searchResult'],\n          fieldRequired: false,\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'data',\n      components: [\n        {\n          name: 'DataTable',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64v-96h160v96zm0-160H64v-96h160v96zm224 160H288v-96h160v96zm0-160H288v-96h160v96z',\n          include: ['searchResult'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'panel',\n      components: [\n        {\n          name: 'TabPanel',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z',\n          container: true,\n          include: ['edit', 'view'],\n          childs: ['TabItem', 'TabItem'],\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'Group',\n          icon:\n            'M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z',\n          container: true,\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'other',\n      components: [\n        {\n          name: 'TabPanel',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'Group',\n          icon:\n            'M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'other1',\n      components: [\n        {\n          name: 'TabPanel',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'Group',\n          icon:\n            'M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'other2',\n      components: [\n        {\n          name: 'TabPanel',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'Group',\n          icon:\n            'M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'other3',\n      components: [\n        {\n          name: 'TabPanel',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'Group',\n          icon:\n            'M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    },\n    {\n      name: 'other4',\n      components: [\n        {\n          name: 'TabPanel',\n          icon:\n            'M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        },\n        {\n          name: 'Group',\n          icon:\n            'M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z',\n          include: ['edit', 'view'],\n          exclude: [],\n          properties: {}\n        }\n      ]\n    }\n  ]\n};\n\nexport const TEMPLATE_LIBRARY = {\n  name: 'PalmyraAngularTemplates',\n  version: '1.0.1',\n  templates: [\n    {\n      name: 'Edit',\n      template: 'edit',\n      title: 'Edit',\n      sections: [\n        {\n          name: 'components',\n          title: 'Components'\n        },\n        {\n          name: 'actions',\n          title: 'Actions'\n        }\n      ],\n      icon: '',\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          labelAlignement: {\n            type: 'string',\n            enum: ['horizontal', 'vertical']\n          },\n          featureName: {\n            type: 'string'\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          componentsBreakpoints: {\n            type: 'object',\n            properties: {\n              xs: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              sm: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              md: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              lg: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'labelAlignement'\n            },\n            {\n              key: 'componentsBreakpoints.xs'\n            },\n            {\n              key: 'componentsBreakpoints.sm'\n            },\n            {\n              key: 'componentsBreakpoints.md'\n            },\n            {\n              key: 'componentsBreakpoints.lg'\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'showTitle'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      template: 'selector',\n      name: 'Selector',\n      sections: [\n        {\n          name: 'filter',\n          title: 'Filter',\n          sections: [\n            {\n              name: 'components',\n              title: 'Components'\n            },\n            {\n              name: 'actions',\n              title: 'Actions'\n            }\n          ]\n        },\n        {\n          name: 'grid',\n          title: 'Grid',\n          sections: [\n            {\n              name: 'columns',\n              title: 'Columns'\n            },\n            {\n              name: 'actions',\n              title: 'Actions'\n            }\n          ]\n        }\n      ],\n      icon: '',\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          labelAlignement: {\n            type: 'string',\n            enum: ['horizontal', 'vertical']\n          },\n          featureName: {\n            type: 'string'\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          componentsBreakpoints: {\n            type: 'object',\n            properties: {\n              xs: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              sm: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              md: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              lg: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'labelAlignement'\n            },\n            {\n              key: 'componentsBreakpoints.xs'\n            },\n            {\n              key: 'componentsBreakpoints.sm'\n            },\n            {\n              key: 'componentsBreakpoints.md'\n            },\n            {\n              key: 'componentsBreakpoints.lg'\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'showTitle'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      template: 'search',\n      name: 'Search',\n      sections: [\n        {\n          name: 'columns',\n          title: 'Columns'\n        },\n        {\n          name: 'actions',\n          title: 'Actions'\n        }\n      ],\n      icon: '',\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          showCheckBoxOnRow: {\n            type: 'boolean'\n          },\n          fitWidth: {\n            type: 'boolean'\n          },\n          enableSorting: {\n            type: 'boolean'\n          },\n          pagination: {\n            type: 'object',\n            properties: {\n              pageSize: {\n                type: 'string'\n              },\n              showCombo: {\n                type: 'boolean'\n              },\n              position: {\n                type: 'string'\n              },\n              pagePossibleSizes: {\n                type: 'array',\n                items: {\n                  type: 'number'\n                }\n              }\n            }\n          },\n          featureName: {\n            type: 'string'\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'pagination.pageSize'\n            },\n            {\n              key: 'pagination.position'\n            },\n            {\n              key: 'pagination.pagePossibleSizes',\n              type: 'array',\n              items: [\n                {\n                  key: 'pagination.pagePossibleSizes[]',\n                  placeholder: 'Page Possible Size'\n                }\n              ]\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'pagination.showCombo'\n            },\n            {\n              key: 'showCheckBoxOnRow'\n            },\n            {\n              key: 'fitWidth'\n            },\n            {\n              key: 'enableSorting'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'searchInput',\n      title: 'Search Input',\n      sections: [\n        {\n          name: 'components',\n          title: 'Components'\n        },\n        {\n          name: 'actions',\n          title: 'Actions'\n        }\n      ],\n      icon: '',\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          defaultCriteria: {\n            type: 'string'\n          },\n          featureName: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          hideOperators: {\n            type: 'boolean'\n          },\n          labelAlignement: {\n            type: 'string',\n            enum: ['horizontal', 'vertical']\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          componentsBreakpoints: {\n            type: 'object',\n            properties: {\n              xs: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              sm: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              md: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              lg: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'defaultCriteria'\n            },\n            {\n              key: 'labelAlignement'\n            },\n            {\n              key: 'componentsBreakpoints.xs'\n            },\n            {\n              key: 'componentsBreakpoints.sm'\n            },\n            {\n              key: 'componentsBreakpoints.md'\n            },\n            {\n              key: 'componentsBreakpoints.lg'\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'showTitle'\n            },\n            {\n              key: 'hideOperators'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'edit-collection',\n      title: 'Edit Collection',\n      sections: [\n        {\n          name: 'columns',\n          title: 'Columns'\n        },\n        {\n          name: 'actions',\n          title: 'Actions'\n        }\n      ],\n      icon: '',\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          showCheckBoxOnRow: {\n            type: 'boolean'\n          },\n          fitWidth: {\n            type: 'boolean'\n          },\n          enableSorting: {\n            type: 'boolean'\n          },\n          pagination: {\n            type: 'object',\n            properties: {\n              pageSize: {\n                type: 'string'\n              },\n              showCombo: {\n                type: 'boolean'\n              },\n              position: {\n                type: 'string'\n              },\n              pagePossibleSizes: {\n                type: 'array',\n                items: {\n                  type: 'number'\n                }\n              }\n            }\n          },\n          featureName: {\n            type: 'string'\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'pagination.pageSize'\n            },\n            {\n              key: 'pagination.position'\n            },\n            {\n              key: 'pagination.pagePossibleSizes',\n              type: 'array',\n              items: [\n                {\n                  key: 'pagination.pagePossibleSizes[]',\n                  placeholder: 'Page Possible Size'\n                }\n              ]\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'pagination.showCombo'\n            },\n            {\n              key: 'showCheckBoxOnRow'\n            },\n            {\n              key: 'fitWidth'\n            },\n            {\n              key: 'enableSorting'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'view-collection',\n      title: 'View Collection',\n      sections: [\n        {\n          name: 'columns',\n          title: 'Columns'\n        },\n        {\n          name: 'actions',\n          title: 'Actions'\n        }\n      ],\n      icon: '',\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          showCheckBoxOnRow: {\n            type: 'boolean'\n          },\n          fitWidth: {\n            type: 'boolean'\n          },\n          enableSorting: {\n            type: 'boolean'\n          },\n          pagination: {\n            type: 'object',\n            properties: {\n              pageSize: {\n                type: 'string'\n              },\n              showCombo: {\n                type: 'boolean'\n              },\n              position: {\n                type: 'string'\n              },\n              pagePossibleSizes: {\n                type: 'array',\n                items: {\n                  type: 'number'\n                }\n              }\n            }\n          },\n          featureName: {\n            type: 'string'\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'pagination.pageSize'\n            },\n            {\n              key: 'pagination.position'\n            },\n            {\n              key: 'pagination.pagePossibleSizes',\n              type: 'array',\n              items: [\n                {\n                  key: 'pagination.pagePossibleSizes[]',\n                  placeholder: 'Page Possible Size'\n                }\n              ]\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'pagination.showCombo'\n            },\n            {\n              key: 'showCheckBoxOnRow'\n            },\n            {\n              key: 'fitWidth'\n            },\n            {\n              key: 'enableSorting'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'view',\n      title: 'View',\n      icon: '',\n      sections: [\n        {\n          name: 'components',\n          title: 'Components'\n        },\n        {\n          name: 'actions',\n          title: 'Actions'\n        }\n      ],\n      schema: {\n        type: 'object',\n        properties: {\n          title: {\n            type: 'string'\n          },\n          showTitle: {\n            type: 'boolean'\n          },\n          labelAlignement: {\n            type: 'string',\n            enum: ['horizontal', 'vertical']\n          },\n          featureName: {\n            type: 'string'\n          },\n          actions: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string'\n                },\n                template: {\n                  type: 'string'\n                },\n                servicePaths: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      url: {\n                        type: 'string'\n                      },\n                      httpMethod: {\n                        type: 'string',\n                        enum: [\n                          'GET',\n                          'POST',\n                          'PUT',\n                          'HEAD',\n                          'DELETE',\n                          'CONNECT',\n                          'OPTIONS'\n                        ]\n                      },\n                      includeBody: {\n                        type: 'boolean'\n                      },\n                      condition: {\n                        type: 'object',\n                        properties: {\n                          expression: {\n                            type: 'string'\n                          },\n                          evaluationType: {\n                            type: 'string',\n                            enum: ['client', 'server']\n                          },\n                          calculationBase: {\n                            type: 'array',\n                            items: {\n                              type: 'string'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                screens: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      path: {\n                        type: 'string'\n                      },\n                      navigationType: {\n                        type: 'string',\n                        enum: ['forward', 'back', 'dialog', 'switch', 'call']\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          componentsBreakpoints: {\n            type: 'object',\n            properties: {\n              xs: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              sm: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              md: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              },\n              lg: {\n                type: 'number',\n                minimum: 1,\n                maximum: 12\n              }\n            }\n          }\n        },\n        required: []\n      },\n      layout: [\n        {\n          items: [\n            {\n              key: 'title'\n            },\n            {\n              key: 'labelAlignement'\n            },\n            {\n              key: 'componentsBreakpoints.xs'\n            },\n            {\n              key: 'componentsBreakpoints.sm'\n            },\n            {\n              key: 'componentsBreakpoints.md'\n            },\n            {\n              key: 'componentsBreakpoints.lg'\n            },\n            {\n              key: 'actions',\n              type: 'array',\n              items: [\n                {\n                  key: 'actions[].name',\n                  notitle: true,\n                  placeholder: 'name'\n                },\n                {\n                  key: 'actions[].template',\n                  notitle: true,\n                  placeholder: 'template'\n                },\n                {\n                  key: 'actions[].servicePaths',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].servicePaths[].url',\n                      notitle: true,\n                      placeholder: 'url'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].httpMethod',\n                      notitle: true,\n                      placeholder: 'http Method'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.expression',\n                      notitle: true,\n                      placeholder: 'condition expression'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.evaluationType',\n                      notitle: true,\n                      placeholder: 'condition evaluation Type'\n                    },\n                    {\n                      key: 'actions[].servicePaths[].condition.calculationBase',\n                      type: 'array',\n                      items: [\n                        {\n                          key:\n                            'actions[].servicePaths[].condition.calculationBase[]',\n                          notitle: true,\n                          placeholder: 'calculation Base'\n                        }\n                      ]\n                    },\n                    {\n                      key: 'actions[].servicePaths[].includeBody',\n                      title: 'include Body',\n                      placeholder: 'include Body'\n                    }\n                  ]\n                },\n                {\n                  key: 'actions[].screens',\n                  type: 'array',\n                  items: [\n                    {\n                      key: 'actions[].screens[].path',\n                      notitle: true,\n                      placeholder: 'Screen Path'\n                    },\n                    {\n                      key: 'actions[].screens[].navigationType',\n                      notitle: true,\n                      placeholder: 'Navigation Type'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              key: 'showTitle'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n\nexport const ROLES: Role[] = [\n  { name: 'admin' },\n  { name: 'vermeg_user' },\n  { name: 'simple_user' },\n  { name: 'role1' },\n  { name: 'role2' },\n  { name: 'role3' },\n  { name: 'role4' },\n  { name: 'role5' },\n  { name: 'role6' },\n  { name: 'role7' },\n  { name: 'role8' },\n  { name: 'role9' },\n  { name: 'role10' },\n  { name: 'role11' },\n  { name: 'role12' },\n  { name: 'role13' },\n  { name: 'role14' },\n  { name: 'role15' },\n  { name: 'role16' },\n  { name: 'role17' },\n  { name: 'role18' },\n  { name: 'role19' },\n  { name: 'role20' },\n  { name: 'role21' },\n  { name: 'role22' },\n  { name: 'role23' }\n];\n","import { SecurityClientApi } from '@palmyra-devkit/core-api/client';\nimport { Observable, of } from 'rxjs';\n\nimport { Role } from '@palmyra-devkit/core-api/shared';\n\nimport { ROLES } from '../mocked-response/mock';\n\nexport class SecurityClientApiImpl implements SecurityClientApi {\n  getRoles(): Observable<Role[]> {\n    return of(ROLES);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { tap, shareReplay } from 'rxjs/operators';\n\nimport {\n  Entity,\n  Service,\n  Feature,\n  Project,\n  Screen,\n  Page\n} from '@palmyra-devkit/core-api/shared';\nimport { WorkspaceClientApi } from '@palmyra-devkit/core-api/client';\n\nconst API_BASE_PATH = '/api';\n\n@Injectable()\nexport class WorkspaceClientApiImpl extends WorkspaceClientApi {\n  private shareProjectWithReplay: ReplaySubject<Project>;\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getCurrentProjectInfo(): Observable<Project> {\n    if (this.shareProjectWithReplay) {\n      return this.shareProjectWithReplay;\n    } else {\n      this.shareProjectWithReplay = new ReplaySubject<Project>();\n      return this.http\n        .get<Project>(`${API_BASE_PATH}/workspace/project/info`)\n        .pipe(\n          tap(data => {\n            this.shareProjectWithReplay.next(data);\n          })\n        );\n      // shareReplay\n    }\n  }\n\n  getServices(): Observable<Service[]> {\n    return this.http.get<Service[]>(`${API_BASE_PATH}/workspace/services`);\n  }\n\n  getModels(): Observable<Entity[]> {\n    return this.http.get<Entity[]>(`${API_BASE_PATH}/workspace/models`);\n  }\n\n  getModel(featureName: string): Observable<Entity> {\n    if (\n      featureName === undefined ||\n      featureName === null ||\n      featureName === ''\n    ) {\n      throw new Error(\n        'Required parameter featureName was empty, null or undefined.'\n      );\n    }\n    return this.http\n      .get<Entity>(`${API_BASE_PATH}/workspace/models/${featureName}`)\n      .pipe(shareReplay());\n  }\n\n  getAllFeatures(): Observable<Feature[]> {\n    return this.http.get<Feature[]>(`${API_BASE_PATH}/workspace/features/all`);\n  }\n  getFeature(featureName: string): Observable<Feature> {\n    if (\n      featureName === undefined ||\n      featureName === null ||\n      featureName === ''\n    ) {\n      throw new Error(\n        'Required parameter featureName was empty, null or undefined.'\n      );\n    }\n    return this.http.get<Feature>(\n      `${API_BASE_PATH}/workspace/features/${featureName}`\n    );\n  }\n\n  getAllScreens(): Observable<Screen[]> {\n    return this.http.get<Screen[]>(`${API_BASE_PATH}/workspace/screens/all`);\n  }\n\n  getPage(name: string): Observable<Page> {\n    return undefined;\n  }\n\n  getAllPages(): Observable<Page[]> {\n    /*const data = [\n      {\n        label: 'Dashboard',\n        name: 'Dashboard',\n        template: 'page',\n        routePath: '/dashboard',\n        expandedIcon: 'fa fa-folder-open',\n        collapsedIcon: 'fa fa-file',\n        content: {\n          name: 'Dashboard',\n          template: 'page',\n          components: [\n            {\n              name: 'updatorUserId',\n              type: 'Label',\n              properties: {\n                readOnly: true,\n                label: 'updatorUserId',\n                wordSize: 0,\n                mandatory: false,\n                showLabel: true\n              }\n            },\n            {\n              name: 'updateDate',\n              type: 'Label',\n              properties: {\n                readOnly: true,\n                label: 'updateDate',\n                wordSize: 0,\n                mandatory: false,\n                showLabel: true\n              }\n            },\n            {\n              name: 'creatorUserId',\n              type: 'Label',\n              properties: {\n                readOnly: true,\n                label: 'creatorUserId',\n                wordSize: 0,\n                mandatory: false,\n                showLabel: true\n              }\n            },\n            {\n              name: 'creationDate',\n              type: 'Label',\n              properties: {\n                readOnly: true,\n                label: 'creationDate',\n                wordSize: 0,\n                mandatory: false,\n                showLabel: true\n              }\n            }\n          ]\n        }\n      },\n      {\n        label: 'Data Visualization',\n        name: 'Data Visualization',\n        template: 'page',\n        routePath: '/data-visualization',\n        expandedIcon: 'fa fa-folder-open',\n        collapsedIcon: 'fa fa-file'\n      },\n      {\n        label: 'Currency exchange',\n        name: 'Currency exchange',\n        template: 'page',\n        routePath: '/currency',\n        expandedIcon: 'fa fa-file',\n        collapsedIcon: 'fa fa-file'\n      }\n    ];*/\n    return this.http.get<Page[]>(`${API_BASE_PATH}/workspace/pages/all`);\n  }\n}\n","import {\n  IdeMessageService,\n  Message\n} from '@palmyra-devkit/core-api/client/messages';\n\nexport class IDEMessageService extends IdeMessageService {\n  pushSuccess(message: Message): void {\n    console.log('Success : ' + message.detail);\n  }\n  pushError(message: Message): void {\n    console.log('Error : ' + message.detail);\n  }\n  pushInfo(message: Message): void {\n    console.log('Info : ' + message.detail);\n  }\n  pushWarning(message: Message): void {\n    console.log('Warning : ' + message.detail);\n  }\n}\n","import { IdeActionsService } from '@palmyra-devkit/core-api/client';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IdeActionsServiceImpl extends IdeActionsService {\n  doSave(): void {\n    this.save$.next();\n  }\n  save() {\n    return this.save$.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { ScreenEditorComponent } from './main/screen-editor/screen-editor.component';\nimport { MainModule } from './main/main.module';\nimport { SecurityClientApiImpl } from '../fake-backend/mocked-api-impl/security-client-api-impl';\nimport { WorkspaceClientApiImpl } from '../fake-backend/mocked-api-impl/workspace.client.api.impl';\nimport { IDEMessageService } from '../fake-backend/mocked-api-impl/ide-message.api';\nimport { IdeMessageService } from '@palmyra-devkit/core-api/client/messages';\nimport { IdeActionsServiceImpl } from '../fake-backend/mocked-api-impl/ide-actions.service';\nconst routes: Routes = [{ path: '', component: ScreenEditorComponent }];\nimport { StoreModule } from '@ngrx/store'\nimport { EffectsModule } from '@ngrx/effects';\nimport { WorkspaceClientApi } from '@palmyra-devkit/core-api/client/workspace.client.api';\nimport {\n  SecurityClientApi,\n  IdeActionsService\n} from '@palmyra-devkit/core-api/client';\nconst modulesApiPaths = { 'screen-editor': '/api/screen-editor/1.5.0-beta.67' };\n@NgModule({\n  imports: [RouterModule.forChild(routes),  StoreModule.forRoot({}),\n    EffectsModule.forRoot([])],\n  exports: [MainModule],\n  providers: [ { provide: 'API_PATHS', useValue: modulesApiPaths },\n    { provide: WorkspaceClientApi, useClass: WorkspaceClientApiImpl },\n    { provide: SecurityClientApi, useClass: SecurityClientApiImpl },\n    { provide: IdeMessageService, useClass: IDEMessageService },\n    { provide: IdeActionsService, useClass: IdeActionsServiceImpl }]\n})\nexport class ScreenEditorModule {}\n"]}