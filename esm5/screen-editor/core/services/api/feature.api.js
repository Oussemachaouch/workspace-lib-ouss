/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Inject } from '@angular/core';
import { HttpClient } from '@angular/common/http';
var FeatureApi = /** @class */ (function () {
    function FeatureApi(http, api) {
        this.http = http;
        this.api = api;
    }
    FeatureApi.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FeatureApi.ctorParameters = function () { return [
        { type: HttpClient },
        { type: String, decorators: [{ type: Inject, args: ['API_PATHS',] }] }
    ]; };
    return FeatureApi;
}());
export { FeatureApi };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FeatureApi.prototype.http;
    /**
     * @type {?}
     * @private
     */
    FeatureApi.prototype.api;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5hcGkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly93b3Jrc3BhY2UtbGliLW91c3MvIiwic291cmNlcyI6WyJzY3JlZW4tZWRpdG9yL2NvcmUvc2VydmljZXMvYXBpL2ZlYXR1cmUuYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFLbEQ7SUFFRSxvQkFDVSxJQUFnQixFQUNLLEdBQVc7UUFEaEMsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUNLLFFBQUcsR0FBSCxHQUFHLENBQVE7SUFDdkMsQ0FBQzs7Z0JBTEwsVUFBVTs7OztnQkFMRixVQUFVOzZDQVNkLE1BQU0sU0FBQyxXQUFXOztJQW9FdkIsaUJBQUM7Q0FBQSxBQXhFRCxJQXdFQztTQXZFWSxVQUFVOzs7Ozs7SUFFbkIsMEJBQXdCOzs7OztJQUN4Qix5QkFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IEZlYXR1cmUsIFNjcmVlbiB9IGZyb20gJ0BwYWxteXJhLWRldmtpdC9jb3JlLWFwaS9zaGFyZWQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRmVhdHVyZUFwaSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaHR0cDogSHR0cENsaWVudCxcbiAgICBASW5qZWN0KCdBUElfUEFUSFMnKSBwcml2YXRlIGFwaTogc3RyaW5nXG4gICkge31cblxuICAvLyBzYXZlRmVhdHVyZXMoZmVhdHVyZXM6IEZlYXR1cmVbXSk6IE9ic2VydmFibGU8RmVhdHVyZVtdPiB7XG4gIC8vICAgaWYgKGZlYXR1cmVzID09PSBudWxsIHx8IGZlYXR1cmVzID09PSB1bmRlZmluZWQpIHtcbiAgLy8gICAgIHRocm93IEVycm9yKCdGZWF0dXJlcyBhcmUgcmVxdWlyZWQnKTtcbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PEZlYXR1cmVbXT4oXG4gIC8vICAgICBgJHt0aGlzLmFwaVsnc2NyZWVuLWVkaXRvciddfS9mZWF0dXJlL2FsbGAsXG4gIC8vICAgICBmZWF0dXJlc1xuICAvLyAgICk7XG4gIC8vIH1cbiAgLy9cbiAgLy8gc2F2ZUZlYXR1cmUoZmVhdHVyZTogRmVhdHVyZSk6IE9ic2VydmFibGU8RmVhdHVyZT4ge1xuICAvLyAgIGlmIChmZWF0dXJlID09PSBudWxsIHx8IGZlYXR1cmUgPT09IHVuZGVmaW5lZCkge1xuICAvLyAgICAgdGhyb3cgRXJyb3IoJ0ZlYXR1cmUgaXMgcmVxdWlyZWQnKTtcbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PEZlYXR1cmU+KFxuICAvLyAgICAgYCR7dGhpcy5hcGlbJ3NjcmVlbi1lZGl0b3InXX0vZmVhdHVyZWAsXG4gIC8vICAgICBmZWF0dXJlXG4gIC8vICAgKTtcbiAgLy8gfVxuICAvL1xuICAvLyBkZWxldGVGZWF0dXJlKGZlYXR1cmVOYW1lOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgLy8gICBpZiAoXG4gIC8vICAgICBmZWF0dXJlTmFtZSA9PT0gdW5kZWZpbmVkIHx8XG4gIC8vICAgICBmZWF0dXJlTmFtZSA9PT0gbnVsbCB8fFxuICAvLyAgICAgZmVhdHVyZU5hbWUgPT09ICcnXG4gIC8vICAgKSB7XG4gIC8vICAgICB0aHJvdyBFcnJvcignRmVhdHVyZU5hbWUgaXMgcmVxdWlyZWQnKTtcbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGU8Ym9vbGVhbj4oXG4gIC8vICAgICBgJHt0aGlzLmFwaVsnc2NyZWVuLWVkaXRvciddfS9mZWF0dXJlLyR7ZmVhdHVyZU5hbWV9YFxuICAvLyAgICk7XG4gIC8vIH1cbiAgLy9cbiAgLy8gc2F2ZVNjcmVlbihmZWF0dXJlTmFtZTogc3RyaW5nLCBzY3JlZW46IFNjcmVlbik6IE9ic2VydmFibGU8U2NyZWVuPiB7XG4gIC8vICAgaWYgKFxuICAvLyAgICAgZmVhdHVyZU5hbWUgPT09IHVuZGVmaW5lZCB8fFxuICAvLyAgICAgZmVhdHVyZU5hbWUgPT09IG51bGwgfHxcbiAgLy8gICAgIGZlYXR1cmVOYW1lID09PSAnJ1xuICAvLyAgICkge1xuICAvLyAgICAgdGhyb3cgRXJyb3IoJ0ZlYXR1cmVOYW1lIGlzIHJlcXVpcmVkJyk7XG4gIC8vICAgfVxuICAvLyAgIGlmIChzY3JlZW4gPT09IHVuZGVmaW5lZCB8fCBzY3JlZW4gPT09IG51bGwpIHtcbiAgLy8gICAgIHRocm93IEVycm9yKCdTY3JlZW4gaXMgcmVxdWlyZWQnKTtcbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PFNjcmVlbj4oXG4gIC8vICAgICBgJHt0aGlzLmFwaVsnc2NyZWVuLWVkaXRvciddfS9mZWF0dXJlLyR7ZmVhdHVyZU5hbWV9L3NjcmVlbmAsXG4gIC8vICAgICBzY3JlZW5cbiAgLy8gICApO1xuICAvLyB9XG4gIC8vXG4gIC8vIGRlbGV0ZVNjcmVlbihmZWF0dXJlTmFtZTogc3RyaW5nLCBzY3JlZW5OYW1lOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgLy8gICBpZiAoXG4gIC8vICAgICBmZWF0dXJlTmFtZSA9PT0gdW5kZWZpbmVkIHx8XG4gIC8vICAgICBmZWF0dXJlTmFtZSA9PT0gbnVsbCB8fFxuICAvLyAgICAgZmVhdHVyZU5hbWUgPT09ICcnXG4gIC8vICAgKSB7XG4gIC8vICAgICB0aHJvdyBFcnJvcignRmVhdHVyZU5hbWUgaXMgcmVxdWlyZWQnKTtcbiAgLy8gICB9XG4gIC8vICAgaWYgKHNjcmVlbk5hbWUgPT09IHVuZGVmaW5lZCB8fCBzY3JlZW5OYW1lID09PSBudWxsIHx8IHNjcmVlbk5hbWUgPT09ICcnKSB7XG4gIC8vICAgICB0aHJvdyBFcnJvcignU2NyZWVuTmFtZSBpcyByZXF1aXJlZCcpO1xuICAvLyAgIH1cbiAgLy8gICByZXR1cm4gdGhpcy5odHRwLmRlbGV0ZTxib29sZWFuPihcbiAgLy8gICAgIGAke3RoaXMuYXBpWydzY3JlZW4tZWRpdG9yJ119L2ZlYXR1cmUvJHtmZWF0dXJlTmFtZX0vc2NyZWVuLyR7c2NyZWVuTmFtZX1gXG4gIC8vICAgKTtcbiAgLy8gfVxufVxuIl19